{"version":3,"sources":["utils/meta.ts","utils/formatMoney.ts","App/pages/TokensPage/SummaryCash/SummaryCash.tsx","config/apiUrls.ts","img/ethereum.png","utils/replaceALl.ts","utils/roundedRateTokens.ts","App/pages/TokensPage/Tokens/SingleToken/TokenListMeta/Rate/Rate.tsx","App/pages/TokensPage/Tokens/SingleToken/TokenListMeta/TokenListMeta.tsx","App/pages/TokensPage/Tokens/SingleToken/SingleToken.tsx","App/pages/TokensPage/Tokens/Tokens.tsx","utils/createTokens.ts","utils/createSingleToken.ts","utils/log.ts","store/TokensStore/requestTokensRepos.ts","store/TokensStore/TokensStore.ts","utils/useLocal.ts","utils/useAsync.ts","img/logout.svg","App/pages/TokensPage/TokensNavBar/OpenModal/ModalQR/QRcodePage/QRcodePage.tsx","components/DataToCopy/DataToCopy.tsx","App/pages/TokensPage/TokensNavBar/OpenModal/ModalQR/TopField/TopField.tsx","App/pages/TokensPage/TokensNavBar/OpenModal/ModalQR/ModalQR.tsx","App/pages/TokensPage/TokensNavBar/OpenModal/OpenModal.tsx","App/pages/TokensPage/TokensNavBar/TokensNavBar.tsx","App/pages/TokensPage/TokensPage.tsx","App/pages/WelcomePage/HelloText/HelloText.tsx","App/pages/WelcomePage/SearchTextarea/SearchTextarea.tsx","App/pages/WelcomePage/SearchAddress/InputFormItem/InputFormItem.tsx","App/pages/WelcomePage/SearchAddress/SearchAddress.tsx","App/pages/WelcomePage/WelcomePage.tsx","components/NavBar/NavBar.tsx","App/pages/TransactionsPage/FillInNavBar/FillInNavBar.tsx","App/pages/TransactionsPage/TokenInfo/Coin/Coin.tsx","App/pages/TransactionsPage/TokenInfo/DisplayToken/DisplayToken.tsx","App/pages/TransactionsPage/TokenInfo/TokenInfo.tsx","utils/convertDate.ts","utils/createListTransPage.ts","utils/createEthTrans.ts","store/TokenInfoStore/requestTransactions.ts","store/TokenInfoStore/TokenInfoStore.ts","img/send.svg","img/receive.svg","App/pages/TransactionsPage/Transactions/SingleTrans/SingleTrans.tsx","App/pages/TransactionsPage/Transactions/Transactions.tsx","store/UploadTransStore/requestUploadTrans.ts","store/UploadTransStore/UploadTransStore.ts","App/pages/TransactionsPage/TransactionsPage.tsx","App/pages/NotFoundPage/NotFoundPage.tsx","utils/createTransDetails.ts","store/TransDetailsStore/requestTransDetails.ts","store/TransDetailsStore/TransDetailsStore.ts","App/pages/TransDetailsPage/TransCard/TransCard.tsx","App/pages/TransDetailsPage/TransDetailsPage.tsx","utils/getPatamsTransDetails.ts","App/App.tsx","utils/fit.ts","index.tsx"],"names":["Meta","formatMoney","number","decimal","strNumber","String","Number","toFixed","replace","idxDel","indexOf","count","slice","search","typeNumber","rounded","Intl","NumberFormat","style","minimumFractionDigits","maximumFractionDigits","format","formatDiff","diff","diffNum","formatNumber","num","shortAddress","trans","Title","Typography","SummaryCash","store","useContext","TokensContext","dailyResult","arrow","dailyMoneyNum","repos","dailyMoney","totalSumNum","totalSum","dailyProc","ArrowUpOutlined","color","ArrowDownOutlined","className","level","urls","mask","create","id","address","token","transHash","coins","rate","symbol","apikey","apiUrl","getAddressInfo","replaceAll","string","split","join","roundedRateTokens","rateNumber","Rate","numDiff","diffClassName","TokenListMeta","Item","avatar","src","img","logo","icon","QuestionCircleOutlined","fontSize","background","title","name","description","dif","SingleToken","addressWallet","useHistory","location","pathname","price","to","balance","Tokens","dataSource","tokens","renderItem","CreateTokens","someTokens","tokensForRender","ethBalance","ETH","push","forEach","item","tokenInfo","ItemBalanceDol","Math","pow","decimals","itemInfo","itemBalance","itemPrice","tmpPrice","image","createSingleToken","log","console","requestTokensRepos","a","axios","method","url","response","isError","data","TokensStore","_repos","meta","initial","makeObservable","this","observable","fetch","action","bound","computed","loading","success","error","runInAction","useLocalStore","creator","container","React","current","useLocal","useAsync","func","fetchParam","inputs","catch","_extends","Object","assign","target","i","arguments","length","source","key","prototype","hasOwnProperty","call","apply","_objectWithoutProperties","excluded","sourceKeys","keys","_objectWithoutPropertiesLoose","getOwnPropertySymbols","sourceSymbolKeys","propertyIsEnumerable","SvgLogout","_ref","svgRef","titleId","props","xmlns","width","height","x","y","viewBox","enableBackground","xmlSpace","ref","d","fill","ForwardRef","QRCode","require","QRcodePage","WalletAddressContext","value","DataToCopy","text","useState","copied","setCopied","onCopy","setTimeout","CopyOutlined","margin","Text","TopField","type","strong","ModalQR","setIsModalVisible","isModalVisible","visible","onCancel","footer","bodyStyle","padding","centered","OpenModal","QrcodeOutlined","onClick","createContext","TokensNavBar","window","scrollTo","Provider","Icon","component","LogoutIcon","observer","useParams","refresh","setRefresh","onRefresh","size","tip","refreshingContent","canFetchMore","pullDownThreshold","maxPullDownDistance","antd","HelloText","EthHdWallet","SearchTextarea","history","setAddress","setError","onFinish","initialValue","label","rules","required","message","validator","_","wallet","fromMnemonic","trim","generateAddresses","Promise","resolve","e","reject","TextArea","placeholder","autoSize","minRows","maxRows","allowClear","disabled","htmlType","InputFormItem","reg","RegExp","SearchAddress","WelcomePage","dots","infinite","speed","slidesToShow","slidesToScroll","initialSlide","NavBar","subtitle","backIcon","ArrowLeftOutlined","ghost","onBack","goBack","subTitle","FillInNavBar","TransInfoContext","titleNavBar","Coin","DisplayToken","clearPrice","imgEth","TokenInfo","totalCrypto","totalDollar","dayOfWeek","month","convertDate","date","newDate","Date","today","floor","getTime","hh","getHours","mm","getMinutes","getDay","getDate","getMonth","getFullYear","createListTransPage","list","formedList","operations","tmpBalance","unixTimestamp","timestamp","transactionHash","from","listTransInfo","tokensInformation","tokensAddr","foundedTokenInfo","tokenInfoDisplay","singleToken","tokenInfoPrice","createEthTrans","transactions","formedData","hash","requestTransactions","searchToken","tokenAddress","response2","toUpperCase","etherInfo","TokenInfoStore","lastTransTime","now","isFirst","SvgSend","SvgReceive","SingleTrans","reqAddress","isSend","SendIcon","Receive","balanceReplace","Transactions","needSearch","setNeedSearch","TransContext","postList","setPostList","page","setPage","loader","useRef","useEffect","IntersectionObserver","handleObserver","root","rootMargin","threshold","observe","disconnect","loadMore","then","newList","concat","entities","isIntersecting","requestUploadTrans","toLocaleUpperCase","lastDate","storeTransInfo","storeTrans","UploadTransStore","borderRadius","minHeight","NotFoundPage","status","extra","CreateTransDetails","blockNumber","gasLimit","gasUsed","gasProc","confirmations","requestTransDetails","defaultDetails","TransDetailsStore","_details","details","TransCard","params","TransDetailsContext","hours","minutes","hoursForm","minutesForm","usdBalance","bordered","wordBreak","paddingTop","toDateString","urlArr","getParamsTransDetails","Spin","setDefaultIndicator","App","exact","path","TokensPage","TransactionsPage","TransDetailsPage","SIZE","MOBILE","fit","currentWidth","innerWidth","currentHeight","innerHeight","currentScale","aspectWidth","aspectHeight","min","max","document","documentElement","ReactDOM","render","getElementById","addEventListener"],"mappings":"qgCAAYA,E,8GCACC,EAAc,SAACC,EAAqCC,GAC7D,IAAMC,EAAYC,OACdC,OAAOJ,GACFK,QAAQ,IACRC,QAAQ,SAAU,KAErBC,EAASL,EAAUM,QAAQ,KAE3BC,EADMP,EAAUQ,MAAMH,GACVI,OAAO,SAErBF,EAAQ,GAAyB,IAApBL,OAAOH,KACpBA,EAAUQ,GAGd,IAAMG,EAAaR,OAAOJ,GAEpBa,EAAUT,OAAOQ,EAAWP,QAAQJ,IAS1C,OAAO,IAAIa,KAAKC,aAAa,QAAS,CAClCC,MAAO,UACPC,sBAAuB,EACvBC,sBAAuBjB,IACxBkB,OAAON,IAGDO,EAAa,SAACC,GACvB,IAAMC,EAAUlB,OAAOiB,GACvB,OAAOlB,OAAOmB,EAAQjB,QAAQ,KAGrBkB,EAAe,SAACC,GACzB,OAAO,IAAIV,KAAKC,aAAa,QAAS,IAAII,OAAOK,IAGxCC,EAAe,SAACC,GACzB,MAAM,GAAN,OAAUA,EAAMhB,MAAM,EAAG,GAAzB,aAAgCgB,EAAMhB,MAAM,M,OClCxCiB,EAAUC,IAAVD,MAyCOE,EAvCK,WAChB,IAAMC,EAAQC,qBAAWC,IACrBC,EAAc,GACdC,EAAQ,KAENC,EAAgBL,EAAMM,MAAMC,WAC5BC,EAAclC,OAAO0B,EAAMM,MAAMG,UACjCC,EAAYzC,EACd,KAAYuC,GAAeA,EAAcR,EAAMM,MAAMC,YAA7C,GACR,GAaJ,OAVIF,EAAgB,GAChBF,EAAW,YAAQlC,EAAYoC,EAAe,GAAnC,cAA2CK,EAA3C,MACXN,EAAQ,cAACO,EAAA,EAAD,CAAiBzB,MAAO,CAAE0B,MAAO,YAClCP,EAAgB,GACvBF,EAAW,YAAQ9B,OAAOJ,EAAYoC,EAAe,IAAIzB,MAAM,GAApD,aAA2D8B,EAA3D,MACXN,EAAQ,cAACS,EAAA,EAAD,CAAmB3B,MAAO,CAAE0B,MAAO,UAE3CT,EAAW,aAIX,sBAAKW,UAAU,UAAf,UACI,qBAAKA,UAAU,iBAAf,0BACA,eAACjB,EAAD,CAAOiB,UAAU,iBAAiBC,MAAO,EAAzC,UACI,sBAAMD,UAAU,sBAAhB,eACA,sBAAMA,UAAU,uBAAhB,SACK7C,EAAW,OAAC+B,QAAD,IAACA,OAAD,EAACA,EAAOM,MAAMG,SAAU,KAExC,sBAAMK,UAAU,sBAAhB,oBAEJ,sBAAKA,UAAU,eAAf,UACKX,EADL,IACmBC,S,kBC3ClBY,G,OACH,KADGA,EAED,CACJC,KAAM,cACNC,OAAQ,SAACC,GAAD,wBAA2BA,KAJ9BH,EAMF,CACHC,KAAM,yBACNC,OAAQ,SAACE,EAAiBC,GAAlB,8BACaD,EADb,kBAC8BC,KATjCL,EAWM,CACXC,KAAM,iCACNC,OAAQ,SAACI,EAAmBC,EAAeC,EAAcC,GAAjD,oCACmBH,EADnB,kBACsCC,EADtC,iBACoDC,EADpD,mBACmEC,KAItEC,EAAS,iCACTC,EAAS,4BAETC,EAAiB,kB,yBCrBf,MAA0B,qC,SCA5BC,G,OAAa,SAACC,EAAyBjD,EAAgBL,GAEhE,OAD0BH,OAAOyD,GAChBC,MAAMlD,GAAQmD,KAAKxD,KCC3ByD,EAAoB,SAACT,GAC9B,IAAMU,EAAa5D,OAAOuD,EAAWL,EAAM,IAAK,KAChD,OAAIU,EAAa,GAAKA,EAAa,EACxBjE,EAAYiE,EAAW3D,QAAQ,GAAI,GAEvCiD,GCgBIW,EAbe,SAAC,GAAoB,IAAlBX,EAAiB,EAAjBA,KAAMjC,EAAW,EAAXA,KAC7B6C,EAAU9D,OAAOiB,GACjB8C,EAAa,iBACfD,EAAU,EAAI,YAAcA,EAAU,EAAI,cAAgB,iBAE9D,OACI,qCACI,sBAAMtB,UAAU,UAAhB,oBAA+BmB,EAAkBT,GAAjD,OACA,sBAAMV,UAAWuB,EAAjB,oBAAqCD,EAAU,EAAI,IAAM,IAAzD,OAA8D7C,EAA9D,YCIG+C,EAhBO,SAAC,GAAe,IAAbjB,EAAY,EAAZA,MACrB,OACI,cAAC,IAAKkB,KAAKvE,KAAX,CACIwE,OACI,cAAC,IAAD,CACIC,IAAuB,SAAb,OAALpB,QAAK,IAALA,OAAA,EAAAA,EAAOI,QAAmBiB,EAA1B,OAAgCrB,QAAhC,IAAgCA,OAAhC,EAAgCA,EAAOsB,KAC5CC,KAAM,cAACC,EAAA,EAAD,IACN3D,MAAO,CAAE4D,SAAU,OAAQlC,MAAO,UAAWmC,WAAY,WAGjEC,MAAO3B,EAAM4B,KACbC,YAAa,cAAC,EAAD,CAAM1B,KAAMH,EAAMG,KAAMjC,KAAM8B,EAAM8B,SCqB9CC,EAzBsB,SAAC,GAAe,IAAb/B,EAAY,EAAZA,MAE9BgC,EADUC,cACcC,SAASC,SAASzB,MAAM,YAAY,GAC5DP,EAAOlD,OAAOuD,EAAWR,EAAMG,KAAM,IAAK,KAC1CiC,EAAQnF,OAAOuD,EAAWR,EAAMoC,MAAO,IAAK,KAAKlF,QAAQ,GAE/D,OACI,mCACI,cAAC,IAAD,CAAMmF,GAAI1C,EAAWE,OAAOmC,EAAlB,OAAiChC,QAAjC,IAAiCA,OAAjC,EAAiCA,EAAOD,SAAlD,SACI,eAAC,IAAKmB,KAAN,WACI,cAAC,EAAD,CAAelB,MAAOA,IACtB,sBAAKP,UAAU,oBAAf,UACI,sBAAKA,UAAU,2BAAf,cAA4C7C,EAAYwF,EAAO,MAC/D,sBAAK3C,UAAU,4BAAf,UACKU,EAAO,GAAKvD,EAAY4D,EAAWR,EAAMsC,QAAS,IAAK,IAAK,GAC5DnC,GAAQ,GAAKH,EAAMsC,QACnBtC,EAAMI,eAPnB,OAAgBJ,QAAhB,IAAgBA,OAAhB,EAAgBA,EAAOD,cCJxBwC,EAZA,WACX,IAAM5D,EAAQC,qBAAWC,IACzB,OACI,qBAAKY,UAAU,cAAf,SACI,cAAC,IAAD,CACI+C,WAAY7D,EAAMM,MAAMwD,OACxBC,WAAY,SAAC1C,GAAD,OAAW,cAAC,EAAD,CAAaA,MAAOA,U,0BVb/CrD,K,kBAAAA,E,kBAAAA,E,cAAAA,E,mBAAAA,M,kCWKCgG,EAAe,SACxBC,GAEA,IAAIxD,EAAW,EACXF,EAAa,EACX2D,EAAkB,GAClBC,EAAaF,EAAWG,IAAIT,QAAUM,EAAWG,IAAIX,MAAMjC,KA8BjE,OA7BA0C,EAAgBG,KAAK,CACjBjD,QAAS/C,OAAO4F,EAAW7C,SAC3BK,OAAQ,MACRwB,KAAM,WACNU,QAAStF,OAAOJ,EAAYgG,EAAWG,IAAIT,QAAS,IACpDF,MAAOpF,OAAOJ,EAAYkG,EAAY,IACtCxB,KAAM,GACNnB,KAAMnD,OAAOJ,EAAYgG,EAAWG,IAAIX,MAAMjC,KAAM,IACpD2B,IAAK7D,EAAW2E,EAAWG,IAAIX,MAAMlE,QAEzCgB,GAAe4D,EAAaF,EAAWG,IAAIX,MAAMlE,MAAS,IAAM0E,EAAWG,IAAIX,MAAMlE,MACrFkB,GAAY0D,EACRF,EAAWH,QACXG,EAAWH,OAAOQ,SAAQ,SAACC,GACvB,GAAIA,EAAKC,UAAUf,MAAO,CACtB,IAGMgB,EAFFnG,OAAOiG,EAAKZ,SAAWe,KAAKC,IAAI,GAAIrG,OAAOiG,EAAKC,UAAUI,WAEzBtG,OAAOiG,EAAKC,UAAUf,MAAMjC,MAEjEf,GAAYgE,EACZlE,GACKkE,EAAiBnG,OAAOiG,EAAKC,UAAUf,MAAMlE,OAC7C,IAAMjB,OAAOiG,EAAKC,UAAUf,MAAMlE,OACvC2E,EAAgBG,KChCC,SAACE,GAC9B,IAAMM,EAAWN,EAAKC,UAChBM,EAAcxG,OAAOiG,EAAKZ,SAAWe,KAAKC,IAAI,GAAIrG,OAAOuG,EAASD,WACxE,GAAIL,EAAKC,UAAUf,MAAO,CACtB,IAAIsB,EAGEC,EAAWF,GAFjBC,EAAYF,EAASpB,OAEoBjC,KACzC,MAAO,CACHJ,QAAS/C,OAAOwG,EAASzD,SACzBK,OAAQpD,OAAOwG,EAASpD,QACxBwB,KAAM5E,OAAOwG,EAAS5B,MACtBU,QAAStF,OAAOJ,EAAY6G,EAAa,IACzCrB,MAAOpF,OAAOJ,EAAY+G,EAAU,IACpCrC,KAAMkC,EAASI,MAAQ,uBAAyBJ,EAASI,MAAQ,GACjEzD,KAAMnD,OAAOJ,EAAY8G,EAAUvD,KAAM,IACzC2B,IAAK7D,EAAWyF,EAAUxF,OAG9B,MAAO,CACH6B,QAAS/C,OAAOwG,EAASzD,SACzBK,OAAQpD,OAAOwG,EAASpD,QACxBwB,KAAM5E,OAAOwG,EAAS5B,MACtBU,QAAStF,OAAOJ,EAAY6G,EAAa,IACzCrB,MAAO,IACPd,KAAMkC,EAASI,MAAQ,uBAAyBJ,EAASI,MAAQ,GACjEzD,KAAM,IACN2B,IAAK,QDKoB+B,CAAkBX,QAK5C,CAAET,OAAQI,EAAiBzD,SAAUA,EAAUF,WAAYA,IEzCzD4E,EAAM,wBAAwB,EAAAC,SAAQD,IAAR,oBCM9BE,EAAkB,uCAAG,WAAOlE,GAAP,eAAAmE,EAAA,+EAEHC,IAAM,CACzBC,OAAQ,MACRC,IAAI,GAAD,OAAK9D,GAAL,OAAcC,GAAd,OAA+BT,GAA/B,OAAoCO,KAJjB,cAEpBgE,EAFoB,yBAMnB,CACHC,SAAS,EACTC,KAAM5B,EAAa0B,EAASE,QARN,uCAW1BT,EAAI,EAAD,IAXuB,kBAYnB,CACHQ,SAAS,EACTC,KAAM,OAdgB,yDAAH,sDCDVC,E,WAQjB,aAAe,yBAPfC,OAAiF,CAC7EhC,OAAQ,GACRrD,SAAU,EACVF,WAAY,GAIF,KAFdwF,KAAa/H,EAAKgI,QAGdC,YAAeC,KAAM,CACjBJ,OAAQK,IACRJ,KAAMI,IACNC,MAAOC,IAAOC,MACdhG,MAAOiG,M,gFAIf,WAAYpF,GAAZ,0BAAAmE,EAAA,yDACQY,KAAKH,OAAS/H,EAAKwI,SAAWN,KAAKH,OAAS/H,EAAKyI,QADzD,wDAKIP,KAAKH,KAAO/H,EAAKwI,QACjBN,KAAKJ,OAAS,CACVhC,OAAQoC,KAAKJ,OAAOhC,OACpBrD,SAAUyF,KAAKJ,OAAOrF,SACtBF,WAAY2F,KAAKJ,OAAOvF,YAThC,SAYoC8E,EAAmBlE,GAZvD,mBAYYwE,EAZZ,EAYYA,QAASC,EAZrB,EAYqBA,MACbD,EAbR,wBAcQO,KAAKH,KAAO/H,EAAK0I,MAdzB,2BAkBIC,aAAY,WACR,EAAKZ,KAAO/H,EAAKyI,QACjB,EAAKX,OAASF,KApBtB,iD,wEAwBA,WACI,OAAOM,KAAKJ,W,KCjCPc,EAAgB,SAAwBC,GACjD,IAAM7G,EAbc,SAAI6G,GACxB,IAAMC,EAAYC,SAAuB,MAMzC,OAJ0B,OAAtBD,EAAUE,UACVF,EAAUE,QAAUH,KAGjBC,EAAUE,QAMHC,CAASJ,GAMvB,OAJAE,aAAgB,WACZ,OAAO,eACR,IAEI/G,G,SCjBEkH,EAAW,SAACC,EAA+BC,EAAmBC,GACvEN,aAAgB,WACZI,EAAI,WAAJ,cAAQC,IAAYE,MAAMnC,KAC3BkC,I,6CCPP,SAASE,KAA2Q,OAA9PA,GAAWC,OAAOC,QAAU,SAAUC,GAAU,IAAK,IAAIC,EAAI,EAAGA,EAAIC,UAAUC,OAAQF,IAAK,CAAE,IAAIG,EAASF,UAAUD,GAAI,IAAK,IAAII,KAAOD,EAAcN,OAAOQ,UAAUC,eAAeC,KAAKJ,EAAQC,KAAQL,EAAOK,GAAOD,EAAOC,IAAY,OAAOL,IAA2BS,MAAMjC,KAAM0B,WAEhT,SAASQ,GAAyBN,EAAQO,GAAY,GAAc,MAAVP,EAAgB,MAAO,GAAI,IAAkEC,EAAKJ,EAAnED,EAEzF,SAAuCI,EAAQO,GAAY,GAAc,MAAVP,EAAgB,MAAO,GAAI,IAA2DC,EAAKJ,EAA5DD,EAAS,GAAQY,EAAad,OAAOe,KAAKT,GAAqB,IAAKH,EAAI,EAAGA,EAAIW,EAAWT,OAAQF,IAAOI,EAAMO,EAAWX,GAAQU,EAAS3J,QAAQqJ,IAAQ,IAAaL,EAAOK,GAAOD,EAAOC,IAAQ,OAAOL,EAFxMc,CAA8BV,EAAQO,GAAuB,GAAIb,OAAOiB,sBAAuB,CAAE,IAAIC,EAAmBlB,OAAOiB,sBAAsBX,GAAS,IAAKH,EAAI,EAAGA,EAAIe,EAAiBb,OAAQF,IAAOI,EAAMW,EAAiBf,GAAQU,EAAS3J,QAAQqJ,IAAQ,GAAkBP,OAAOQ,UAAUW,qBAAqBT,KAAKJ,EAAQC,KAAgBL,EAAOK,GAAOD,EAAOC,IAAU,OAAOL,EAMne,SAASkB,GAAUC,EAAMC,GACvB,IAAI9F,EAAQ6F,EAAK7F,MACb+F,EAAUF,EAAKE,QACfC,EAAQZ,GAAyBS,EAAM,CAAC,QAAS,YAErD,OAAoB,gBAAoB,MAAOtB,GAAS,CACtD0B,MAAO,6BACPC,MAAO,OACPC,OAAQ,OACRC,EAAG,EACHC,EAAG,EACHC,QAAS,cACTpK,MAAO,CACLqK,iBAAkB,mBAEpBC,SAAU,WACV1I,UAAW,GACX2I,IAAKX,EACL,kBAAmBC,GAClBC,GAAQhG,EAAqB,gBAAoB,QAAS,CAC3D7B,GAAI4H,GACH/F,GAAS,KAAmB,gBAAoB,IAAK,KAAmB,gBAAoB,IAAK,CAClGiG,MAAO,6BACP9H,GAAI,SACU,gBAAoB,OAAQ,CAC1CuI,EAAG,wNACHC,KAAM,UACN,gBAAiB,UACjBzK,MAAO,GACP4B,UAAW,KACI,gBAAoB,OAAQ,CAC3C4I,EAAG,sLACHC,KAAM,UACN,gBAAiB,UACjBzK,MAAO,GACP4B,UAAW,QAIf,IAAI8I,GAA0B,aAAiBhB,I,IAChC,I,QC5CTiB,I,cAASC,EAAQ,MAcRC,GAZI,WACf,IAAM5I,EAAKlB,qBAAW+J,IAEtB,OACI,qBAAKlJ,UAAU,eAAf,SACI,qBAAKA,UAAU,mBAAf,SACI,cAAC+I,GAAD,CAAQI,MAAO9I,S,uCCgBhB+I,GArBqB,SAAC,GAAc,IAAZC,EAAW,EAAXA,KAAW,EAClBC,oBAAS,GADS,mBACvCC,EADuC,KAC/BC,EAD+B,KAG9C,OACI,qCACI,cAAC,mBAAD,CACIH,KAAMA,EACNI,OAAQ,WACJC,YAAW,kBAAMF,GAAU,KAAQ,KACnCA,GAAU,IAJlB,SAOI,cAACG,GAAA,EAAD,CACIvL,MAAO,CAAE0B,MAAO,UAAWkC,SAAU,OAAQ4H,OAAQ,uBAG5DL,GAAU,sBAAMnL,MAAO,CAAE0B,MAAO,WAAtB,yBCdf+J,GAAS7K,IAAT6K,KAoBOC,GAlBE,WACb,IAAMzJ,EAAKlB,qBAAW+J,IAEtB,OACI,mCACI,sBAAKlJ,UAAU,iDAAf,UACI,qBAAKA,UAAU,4BAAf,SACI,cAAC6J,GAAD,CAAME,KAAK,YAAX,+DAEJ,sBAAK/J,UAAU,8BAAf,UACI,cAAC6J,GAAD,CAAMG,QAAM,EAAZ,SAAc3J,IACd,cAAC,GAAD,CAAYgJ,KAAMhJ,aChB9BwJ,I,OAAS7K,IAAT6K,MAmCOI,GA5BkB,SAAC,GAA2C,IAAzCC,EAAwC,EAAxCA,kBAAmBC,EAAqB,EAArBA,eAKnD,OACI,eAAC,KAAD,CACIjI,MAAM,qBACNkI,QAASD,EACTE,SARa,WACjBH,GAAkB,IAQdI,OAAQ,KACRC,UAAW,CAAEC,QAAS,aAAcnC,OAAQ,OAC5CoC,UAAU,EANd,UAQI,qBAAKzK,UAAU,qBAAf,SACI,cAAC,GAAD,MAEJ,cAAC,GAAD,IACA,qBAAKA,UAAU,qBAAf,SACI,eAAC,GAAD,CAAM+J,KAAK,YAAX,kBACS,qCADT,2GCHDW,IAnBE1L,IAAT6K,KAEU,WAAO,IAAD,EACwBP,oBAAS,GADjC,mBACba,EADa,KACGD,EADH,KAOpB,OACI,qCACI,qBAAKlK,UAAU,8BAAf,SACI,cAAC2K,GAAA,EAAD,CAAgBvM,MAAO,CAAE4D,SAAU,OAAQlC,MAAO,SAAW8K,QAPvD,WACdV,GAAkB,QAQd,cAAC,GAAD,CAASA,kBAAmBA,EAAmBC,eAAgBA,SCR9DjB,GAAuB2B,wBAAsB,IAsB3CC,GApB8B,SAAC,GAAY,IAAVzK,EAAS,EAATA,GAC5C,OACI,sBACIL,UAAU,gBACV4K,QAAS,WACLG,OAAOC,SAAS,EAAG,IAH3B,UAMI,cAAC9B,GAAqB+B,SAAtB,CAA+B9B,MAAO9I,EAAtC,SACI,cAAC,GAAD,MAEJ,cAAC,IAAD,CAAMuC,GAAI1C,EAAV,SACI,qBAAKF,UAAU,6BAAf,SACI,cAACkL,GAAA,EAAD,CAAMC,UAAWC,GAAYhN,MAAO,CAAE4D,SAAU,kB,UCfvD5C,GAAgByL,0BA8CdQ,gBA5CI,WAAM,IAEbhL,EAAOiL,cAAPjL,GAEFnB,EAAQ4G,GAAc,kBAAM,IAAIf,KACtCqB,EAASlH,EAAMoG,MAAO,CAACjF,GAAK,IALP,MAOSiJ,oBAAS,GAPlB,mBAOdiC,EAPc,KAOLC,EAPK,KASfC,EAAS,uCAAG,sBAAAjH,EAAA,6DACdtF,EAAM+F,KAAO/H,EAAKgI,QAClBsG,GAAW,GAFG,SAGRtM,EAAMoG,MAAMjF,GAHJ,OAIdmL,GAAW,GAJG,2CAAH,qDAOf,OACI,qCACoB,YAAftM,EAAM+F,MAAsB,cAAC,GAAD,CAAc5E,GAAIA,IAC/B,YAAfnB,EAAM+F,OAAuBsG,GAC1B,cAAC,KAAD,CAAMvL,UAAU,UAAU0L,KAAK,QAAQC,IAAI,eAE/C,cAACvM,GAAc6L,SAAf,CAAwB9B,MAAOjK,EAA/B,UACqB,YAAfA,EAAM+F,MAAsC,YAAf/F,EAAM+F,MAAsBsG,IACvD,qCACI,cAAC,GAAD,CAAclL,GAAIA,IAClB,cAAC,EAAD,IACA,cAAC,KAAD,CACIuL,kBAAmB,cAAC,KAAD,CAAMF,KAAK,QAAQ1L,UAAU,aAChDyL,UAAWA,EACXI,cAAc,EACdC,kBAAmB,GACnBC,oBAAqB,GACrB/L,UAAU,aANd,SAQI,cAAC,EAAD,iB,mBClDpBhB,I,cAAegN,KACfjN,GAAgBC,GAAhBD,MAAO8K,GAAS7K,GAAT6K,KAwBAoC,GAtBG,WACd,OACI,mCACI,qBAAKjM,UAAU,aAAf,SACI,sBAAKA,UAAU,mBAAf,UACI,cAAC,GAAD,CAAOA,UAAU,mBAAmBC,MAAO,IAC3C,cAAC,GAAD,CAAOD,UAAU,2CAA2CC,MAAO,EAAnE,0BAGA,cAAC,GAAD,CAAMD,UAAU,yCAAyC+J,KAAK,YAA9D,6FAIA,eAAC,GAAD,CAAM/J,UAAU,mBAAhB,UACI,gDADJ,sC,6BCdZkM,I,OAAgBlD,EAAQ,KAAxBkD,aAmDOC,GAjDQ,WACnB,IAAMC,EAAU5J,cADS,EAEK8G,mBAAS,IAFd,mBAElBhJ,EAFkB,KAET+L,EAFS,OAGG/C,oBAAS,GAHZ,mBAGlBzE,EAHkB,KAGTyH,EAHS,KASzB,OACI,eAAC,KAAD,CAAMnK,KAAK,kBAAkBoK,SALhB,WACbH,EAAQ7I,KAAR,iBAAuBjD,KAIvB,UACI,cAAC,KAAKmB,KAAN,CACI+K,aAAa,wFACbrK,KAAK,YACLsK,MAAM,kBACNC,MAAO,CACH,CAAEC,UAAU,EAAMC,QAAS,+BAC3B,iBAAO,CACHC,UADG,SACOC,EAAG3D,GACT,IACI,IAAM4D,EAASb,GAAYc,aACvB7D,EAAMzL,QAAQ,OAAQ,KAAKuP,QAI/B,OAFAZ,EAAWU,EAAOG,kBAAkB,IACpCZ,GAAS,GACFa,QAAQC,UACjB,MAAOC,GAEL,OADAf,GAAS,GACFa,QAAQG,OAAO,sCAjB1C,SAuBI,cAACC,GAAA,EAAD,CACIC,YAAY,iGACZC,SAAU,CAAEC,QAAS,EAAGC,QAAS,GACjCC,YAAU,MAGlB,cAAC,KAAKnM,KAAN,UACI,cAAC,KAAD,CAAQsI,KAAK,UAAU8D,SAAUhJ,EAASiJ,SAAS,SAAnD,0B,UCNDC,GAtCO,WAAO,IAAD,EACIzE,oBAAS,GADb,mBACjBzE,EADiB,KACRyH,EADQ,KAGxB,OACI,qCACI,cAAC,KAAK7K,KAAN,CACI+K,aAAa,6CACbrK,KAAK,UACLsK,MAAM,UACNC,MAAO,CACH,CAAEC,UAAU,EAAMC,QAAS,8BAC3B,iBAAO,CACHC,UADG,SACOC,EAAG3D,GACT,IAAM6E,EAAM,IAAIC,OAAO,qBACvB,OAAK9E,IAA+B,GAAtBA,EAAMpL,OAAOiQ,IAI3B1B,GAAS,GACFa,QAAQG,OAAO,kCAJlBhB,GAAS,GACFa,QAAQC,eAXnC,SAmBI,cAAC,KAAD,CACIQ,YAAU,EACVJ,YAAY,0DAGpB,cAAC,KAAK/L,KAAN,UACI,cAAC,KAAD,CAAQsI,KAAK,UAAU8D,SAAUhJ,EAASiJ,SAAS,SAAnD,0BCfDI,GAdO,WAClB,IAAM9B,EAAU5J,cAMhB,OACI,cAAC,KAAD,CAAML,KAAK,gBAAgBoK,SALd,SAACpD,GACdiD,EAAQ7I,KAAR,iBAAuB4F,EAAM7I,WAI7B,SACI,cAAC,GAAD,O,qBCoBG6N,I,cAzBK,WAUhB,OACI,sBAAKnO,UAAU,aAAf,UACI,cAAC,GAAD,IACA,eAAC,KAAD,6BAZS,CACboO,MAAM,EACNC,UAAU,EACVC,MAAO,IACPC,aAAc,EACdC,eAAgB,EAChBC,aAAc,IAMV,cACI,qBAAKzO,UAAU,eAAf,SACI,cAAC,GAAD,MAEJ,qBAAKA,UAAU,eAAf,SACI,cAAC,GAAD,e,6BCSL0O,GAzBiB,SAAC,GAAyB,IAAvBxM,EAAsB,EAAtBA,MAAOyM,EAAe,EAAfA,SAChCvC,EAAU5J,cAEhB,OACI,mCACI,qBACIxC,UAAU,iCACV4K,QAAS,WACLG,OAAOC,SAAS,EAAG,IAH3B,SAMI,cAAC,KAAD,CACI4D,SAAU,cAACC,GAAA,EAAD,CAAmBzQ,MAAO,CAAE0B,MAAO,QAASkC,SAAU,UAChE8M,OAAO,EACPC,OAAQ,WACJ3C,EAAQ4C,UAEZ9M,MAAO,qBAAKlC,UAAU,gBAAf,SAAgCkC,IACvC+M,SAAU,qBAAKjP,UAAU,gBAAf,SAAgC2O,WClB/CO,GANM,WACjB,IAAMhQ,EAAQC,qBAAWgQ,IACnBC,EAAW,UAAMlQ,EAAMM,MAAMkE,UAAUvB,KAA5B,YAAoCjD,EAAMM,MAAMkE,UAAU/C,QAC3E,OAAO,cAAC,GAAD,CAAQuB,MAAOkN,EAAaT,SAAU,MCsBlCU,I,cArBe,SAAC,GAAmB,IAAjB3O,EAAgB,EAAhBA,KAAM2B,EAAU,EAAVA,IAC7B5D,EAAOjB,OAAO6E,GACpB,OACI,mCACI,qBAAKrC,UAAU,YAAf,SACI,sBAAKA,UAAU,kBAAf,UACI,sBAAKA,UAAU,mCAAf,cAAoDU,KACpD,sBACIV,UACIvB,EAAO,EAAI,YAAcA,EAAO,EAAI,cAAgB,gBAF5D,UAKKA,EAAO,EAAI,IAAM,GACjB4D,EANL,gBCkBLiN,I,cAnBuB,SAAC,GAAsC,IAApCzN,EAAmC,EAAnCA,KAAMgB,EAA6B,EAA7BA,QAASF,EAAoB,EAApBA,MAAOhC,EAAa,EAAbA,OACrD4O,EAAapS,EAAYK,OAAOuD,EAAW4B,EAAO,IAAK,KAAKlF,QAAQ,GAAI,GAE9E,OACI,sBAAKuC,UAAU,sBAAf,UACI,cAAC,IAAD,CACI2B,IAAgB,QAAXhB,EAAmB6O,EAAS3N,EACjC6J,KAAM,GACN5J,KAAM,cAACC,EAAA,EAAD,IACN3D,MAAO,CAAE4D,SAAU,QAASlC,MAAO,UAAWmC,WAAY,WAE9D,sBAAKjC,UAAU,+BAAf,cAAgDuP,KAChD,sBAAKvP,UAAU,6BAAf,UACK6C,EADL,IACelC,UCHZ8O,GAlBG,WACd,IAAMvQ,EAAQC,qBAAWgQ,IAEzB,OACI,mCACI,sBAAKnP,UAAU,mBAAf,UACI,cAAC,GAAD,CAAMU,KAAMxB,EAAMM,MAAMkE,UAAUhD,KAAM2B,IAAKnD,EAAMM,MAAMkE,UAAUrB,MACnE,cAAC,GAAD,CACIR,KAAM3C,EAAMM,MAAMkE,UAAU7B,KAC5BgB,QAAS3D,EAAMM,MAAMkE,UAAUgM,YAC/B/M,MAAOzD,EAAMM,MAAMkE,UAAUiM,YAC7BhP,OAAQzB,EAAMM,MAAMkE,UAAU/C,eClB5CiP,GAAY,CAAC,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,OACvDC,GAAQ,CACV,MACA,MACA,MACA,MACA,MACA,OACA,OACA,MACA,OACA,MACA,MACA,OAGSC,GAAc,SAACC,GACxB,IAAMC,EAAU,IAAIC,KAAY,IAAPF,GACnBG,EAAQ,IAAID,KACZxR,EAAOmF,KAAKuM,OAAOD,EAAME,UAAYJ,EAAQI,WAA3B,OAClBC,EAAKL,EAAQM,YAAc,EAAI,IAAMN,EAAQM,WAAaN,EAAQM,WAClEC,EAAKP,EAAQQ,cAAgB,EAAI,IAAMR,EAAQQ,aAAeR,EAAQQ,aAC5E,OAAK/R,GAAQuR,EAAQS,WAAaP,EAAMO,SAE7BhS,EAAO,EACR,GAAN,OAAUmR,GAAUI,EAAQS,UAA5B,YAAyCJ,EAAzC,YAA+CE,GAEzC,GAAN,OAAUP,EAAQU,UAAlB,YAA+Bb,GAAMG,EAAQW,YAA7C,YAA4DX,EAAQY,eAJ9D,SAAN,OAAgBP,EAAhB,YAAsBE,ICdjBM,GAAsB,SAACC,GAChC,IAAIC,EAAkC,GAetC,OAbAD,EAAKE,WAAWxN,SAAQ,SAACC,GACrB,IAAMwN,EAAazT,OAAOiG,EAAK0F,OAASvF,KAAKC,IAAI,GAAIrG,OAAOiG,EAAKC,UAAUI,WAC3EiN,EAAWxN,KAAK,CACZ2N,cAAezN,EAAK0N,UACpBC,gBAAiB3N,EAAK2N,gBACtBD,UAAWrB,GAAYrM,EAAK0N,WAC5BtO,QAAStF,OAAOJ,EAAY8T,EAAY,IACxCrO,GAAIa,EAAKb,GACTyO,KAAM5N,EAAK4N,KACX1Q,OAAQ8C,EAAKC,UAAU/C,YAIxBoQ,GAGEO,GAAgB,SACzBC,EACAC,GAEA,IAAIC,EAAkC,CAClC/N,UAAW,CACPpD,QAAS,GACT6B,KAAM,GACN2B,SAAU,GACVnD,OAAQ,GACRwD,MAAO,GACPxB,MAAO,CACHjC,KAAM,GACNjC,KAAM,KAGdoE,QAAS,IAGT6O,EAAqC,CACrC7P,KAAM,GACNM,KAAM,GACNE,IAAK,GACLsN,YAAa,GACbD,YAAa,GACbhP,KAAM,GACNC,OAAQ,IASZ,GANA4Q,EAAkB/N,SAAQ,SAACmO,GACnBA,EAAYjO,UAAUpD,UAAYkR,IAClCC,EAAmBE,MAIvBF,EAAkB,CAClB,IAAMG,EAAiBH,EAAiB/N,UAAUf,MAC5C+M,EACFlS,OAAOiU,EAAiB5O,SACxBe,KAAKC,IAAI,GAAIrG,OAAOiU,EAAiB/N,UAAUI,WACnD4N,EAAmB,CACf7P,KAAM4P,EAAiB/N,UAAUS,MAC3B,uBAAyBsN,EAAiB/N,UAAUS,MACpD,GACNhC,KAAMsP,EAAiB/N,UAAUvB,KACjCE,IAAKuP,EAAiBpT,EAAWiT,EAAiB/N,UAAUf,MAAMlE,MAAQ,OAC1EiR,YAAaA,EAAcnS,OAAOJ,EAAYuS,EAAa,IAAM,IACjEC,YAAaiC,EACPrU,OACIJ,EAAYuS,EAAclS,OAAOiU,EAAiB/N,UAAUf,MAAMjC,MAAO,IAE7E,IACNA,KAAMkR,EACArU,OAAOJ,EAAYsU,EAAiB/N,UAAUf,MAAMjC,KAAM,IAC1D,IACNC,OAAQ8Q,EAAiB/N,UAAU/C,QAI3C,OAAO+Q,GCjFEG,GAAiB,SAACC,GAC3B,IAAIC,EAAkC,GAiBtC,OAfID,EAAa/K,OAAS,EACtB+K,EAAatO,SAAQ,SAACC,GAClBsO,EAAWxO,KAAK,CACZ2N,cAAezN,EAAK0N,UACpBC,gBAAiB3N,EAAKuO,KACtBb,UAAWrB,GAAYrM,EAAK0N,WAC5BtO,QAAStF,OAAOJ,EAAYsG,EAAK0F,MAAO,IACxCvG,GAAIa,EAAKb,GACTyO,KAAM5N,EAAK4N,KACX1Q,OAAQ,WAIhBoR,EAAa,GAEVA,GCXEE,GAAmB,uCAAG,WAC/B3R,EACA4R,GAF+B,iBAAA1N,EAAA,6DAI3B2N,EAAeD,EAAYjR,MAAM,KAAK,GAJX,kBAMHwD,IAAM,CAC1BC,OAAQ,MACRC,IAAI,GAAD,OAAK9D,GAAL,OAAcC,GAAd,OAA+BR,GAA/B,OAAyCM,KARrB,cAMrBwR,EANqB,yBAUpB,CACHvN,SAAS,EACTC,KAAM,CACFpB,UACIpD,EAAQ+R,gBAAkBF,EAAaE,cACjCf,GAAcc,EAAUtN,KAAK9B,OAAQmP,IDDlCG,ECEUF,EAAUtN,KDDtC,CACHjD,KAAM2N,EACNrN,KAAM,WACNE,IAAK7D,EAAW8T,EAAUhP,IAAIX,MAAMlE,MACpCiR,YAAanS,OAAOJ,EAAYmV,EAAUhP,IAAIT,QAAS,IACvD8M,YAAapS,OAAOJ,EAAYmV,EAAUhP,IAAIT,QAAUyP,EAAUhP,IAAIX,MAAMjC,KAAM,IAClFA,KAAMnD,OAAOJ,EAAYmV,EAAUhP,IAAIX,MAAMjC,KAAM,IACnDC,OAAQ,WCtBmB,uCAoB3B0D,EAAI,EAAD,IApBwB,kBAqBpB,CACHQ,SAAS,EACTC,KAAM,OAvBiB,kCDcP,IAACwN,ICdM,oBAAH,wDCAXC,G,WAiBjB,aAAe,yBAhBfvN,OAA6F,CACzFlG,MAAO,GACP4E,UAAW,CACP7B,KAAM,MACNM,KAAM,GACNE,IAAK,OACLsN,YAAa,OACbD,YAAa,OACbhP,KAAM,GACNC,OAAQ,IAEZ6R,cAAevC,KAAKwC,OAKV,KAHdxN,KAAa/H,EAAKgI,QAGJ,KAFdwN,SAAmB,EAGfvN,YAAeC,KAAM,CACjBJ,OAAQK,IACRJ,KAAMI,IACNC,MAAOC,IAAOC,MACdhG,MAAOiG,M,gFAKf,WAAYnF,EAAiB4R,GAA7B,0BAAA1N,EAAA,yDACQY,KAAKH,OAAS/H,EAAKwI,SAAWN,KAAKH,OAAS/H,EAAKyI,QADzD,wDAKIP,KAAKH,KAAO/H,EAAKwI,QACjBN,KAAKJ,OAAS,CACVwN,cAAepN,KAAKJ,OAAOwN,cAC3B1T,MAAOsG,KAAKJ,OAAOlG,MACnB4E,UAAW0B,KAAKJ,OAAOtB,WAT/B,SAYoCuO,GAAoB3R,EAAS4R,GAZjE,mBAYYrN,EAZZ,EAYYA,QAASC,EAZrB,EAYqBA,MAEbD,EAdR,wBAeQO,KAAKH,KAAO/H,EAAK0I,MAfzB,2BAmBIC,aAAY,WACR,EAAKZ,KAAO/H,EAAKyI,QACjB,EAAKX,OAAOtB,UAAYoB,EAAKpB,aArBrC,iD,0EAyBA,WAKI,OAAO0B,KAAKJ,W,YCtEpB,SAAS,KAA2Q,OAA9P,GAAW0B,OAAOC,QAAU,SAAUC,GAAU,IAAK,IAAIC,EAAI,EAAGA,EAAIC,UAAUC,OAAQF,IAAK,CAAE,IAAIG,EAASF,UAAUD,GAAI,IAAK,IAAII,KAAOD,EAAcN,OAAOQ,UAAUC,eAAeC,KAAKJ,EAAQC,KAAQL,EAAOK,GAAOD,EAAOC,IAAY,OAAOL,IAA2BS,MAAMjC,KAAM0B,WAEhT,SAAS,GAAyBE,EAAQO,GAAY,GAAc,MAAVP,EAAgB,MAAO,GAAI,IAAkEC,EAAKJ,EAAnED,EAEzF,SAAuCI,EAAQO,GAAY,GAAc,MAAVP,EAAgB,MAAO,GAAI,IAA2DC,EAAKJ,EAA5DD,EAAS,GAAQY,EAAad,OAAOe,KAAKT,GAAqB,IAAKH,EAAI,EAAGA,EAAIW,EAAWT,OAAQF,IAAOI,EAAMO,EAAWX,GAAQU,EAAS3J,QAAQqJ,IAAQ,IAAaL,EAAOK,GAAOD,EAAOC,IAAQ,OAAOL,EAFxM,CAA8BI,EAAQO,GAAuB,GAAIb,OAAOiB,sBAAuB,CAAE,IAAIC,EAAmBlB,OAAOiB,sBAAsBX,GAAS,IAAKH,EAAI,EAAGA,EAAIe,EAAiBb,OAAQF,IAAOI,EAAMW,EAAiBf,GAAQU,EAAS3J,QAAQqJ,IAAQ,GAAkBP,OAAOQ,UAAUW,qBAAqBT,KAAKJ,EAAQC,KAAgBL,EAAOK,GAAOD,EAAOC,IAAU,OAAOL,EAMne,SAAS+L,GAAQ5K,EAAMC,GACrB,IAAI9F,EAAQ6F,EAAK7F,MACb+F,EAAUF,EAAKE,QACfC,EAAQ,GAAyBH,EAAM,CAAC,QAAS,YAErD,OAAoB,gBAAoB,MAAO,GAAS,CACtDI,MAAO,6BACPC,MAAO,OACPC,OAAQ,OACRC,EAAG,EACHC,EAAG,EACHC,QAAS,YACTpK,MAAO,CACLqK,iBAAkB,mBAEpBC,SAAU,WACV1I,UAAW,GACX2I,IAAKX,EACL,kBAAmBC,GAClBC,GAAQhG,EAAqB,gBAAoB,QAAS,CAC3D7B,GAAI4H,GACH/F,GAAS,KAAmB,gBAAoB,IAAK,KAAmB,gBAAoB,OAAQ,CACrGiG,MAAO,6BACPS,EAAG,gOACHC,KAAM,UACNzK,MAAO,GACP4B,UAAW,OAIf,IAAI,GAA0B,aAAiB2S,IAChC,ICvCf,SAAS,KAA2Q,OAA9P,GAAWjM,OAAOC,QAAU,SAAUC,GAAU,IAAK,IAAIC,EAAI,EAAGA,EAAIC,UAAUC,OAAQF,IAAK,CAAE,IAAIG,EAASF,UAAUD,GAAI,IAAK,IAAII,KAAOD,EAAcN,OAAOQ,UAAUC,eAAeC,KAAKJ,EAAQC,KAAQL,EAAOK,GAAOD,EAAOC,IAAY,OAAOL,IAA2BS,MAAMjC,KAAM0B,WAEhT,SAAS,GAAyBE,EAAQO,GAAY,GAAc,MAAVP,EAAgB,MAAO,GAAI,IAAkEC,EAAKJ,EAAnED,EAEzF,SAAuCI,EAAQO,GAAY,GAAc,MAAVP,EAAgB,MAAO,GAAI,IAA2DC,EAAKJ,EAA5DD,EAAS,GAAQY,EAAad,OAAOe,KAAKT,GAAqB,IAAKH,EAAI,EAAGA,EAAIW,EAAWT,OAAQF,IAAOI,EAAMO,EAAWX,GAAQU,EAAS3J,QAAQqJ,IAAQ,IAAaL,EAAOK,GAAOD,EAAOC,IAAQ,OAAOL,EAFxM,CAA8BI,EAAQO,GAAuB,GAAIb,OAAOiB,sBAAuB,CAAE,IAAIC,EAAmBlB,OAAOiB,sBAAsBX,GAAS,IAAKH,EAAI,EAAGA,EAAIe,EAAiBb,OAAQF,IAAOI,EAAMW,EAAiBf,GAAQU,EAAS3J,QAAQqJ,IAAQ,GAAkBP,OAAOQ,UAAUW,qBAAqBT,KAAKJ,EAAQC,KAAgBL,EAAOK,GAAOD,EAAOC,IAAU,OAAOL,EAMne,SAASgM,GAAW7K,EAAMC,GACxB,IAAI9F,EAAQ6F,EAAK7F,MACb+F,EAAUF,EAAKE,QACfC,EAAQ,GAAyBH,EAAM,CAAC,QAAS,YAErD,OAAoB,gBAAoB,MAAO,GAAS,CACtDI,MAAO,6BACPC,MAAO,OACPC,OAAQ,OACRC,EAAG,EACHC,EAAG,EACHC,QAAS,YACTpK,MAAO,CACLqK,iBAAkB,mBAEpBC,SAAU,WACV1I,UAAW,GACX2I,IAAKX,EACL,kBAAmBC,GAClBC,GAAQhG,EAAqB,gBAAoB,QAAS,CAC3D7B,GAAI4H,GACH/F,GAAS,KAAmB,gBAAoB,IAAK,KAAmB,gBAAoB,OAAQ,CACrGiG,MAAO,6BACPS,EAAG,6MACHC,KAAM,UACN,gBAAiB,UACjBzK,MAAO,OAIX,IAAI,GAA0B,aAAiBwU,IC4BhCC,ID3BA,ICjBsB,SAAC,GAAiC,IAA/B/T,EAA8B,EAA9BA,MAAOgU,EAAuB,EAAvBA,WAAYpS,EAAW,EAAXA,KACjDqS,EAASD,EAAWT,gBAAkBvT,EAAMuS,KAAKgB,cACjDjQ,EAAc2Q,EAAM,cACblU,EAAaC,EAAM8D,KADN,gBAEX/D,EAAaC,EAAMuS,OAC5BjT,EAAQ2U,EAAS,MAAQ,QACzBjR,EAAOiR,EAAS,cAAC7H,GAAA,EAAD,CAAMC,UAAW6H,KAAe,cAAC9H,GAAA,EAAD,CAAMC,UAAW8H,KACjEC,EAAiBnS,EAAWjC,EAAM+D,QAAS,IAAK,IAEtD,OACI,mCACI,eAAC,IAAKpB,KAAN,WACI,cAAC,IAAKA,KAAKvE,KAAX,CACIgF,MAAOpD,EAAMqS,UACb/O,YAAaA,EACbV,OACI,cAAC,IAAD,CACIgK,KAAM,QACN5J,KAAMA,EACN1D,MAAO,CAAE0B,MAAM,GAAD,OAAK1B,GAAS6D,WAAY,QAASD,SAAU,YAIvE,sBAAKhC,UAAU,oBAAf,UACI,sBAAKA,UAAS,4BAAd,UACK+S,EAAS,IAAM,GADpB,IAEK5V,GAAaK,OAAOkD,GAAQlD,OAAO0V,IAAiBzV,QAAQ,GAAI,MAErE,sBACIuC,UAAS,oCACL+S,EAAS,cAAgB,aAFjC,UAKKA,EAAS,IAAM,GACfvV,OAAOkD,GAAQ,GAAKvD,EAAY+V,EAAgB,GAChD1V,OAAOkD,IAAS,GAAKvD,EAAY+V,EAAgB,GACjDpU,EAAM6B,eAzBH7B,EAAMsS,qBC0EnB+B,I,OA5FuB,SAAC,GAAyC,IAAvCzS,EAAsC,EAAtCA,KAAM0S,EAAgC,EAAhCA,WAAYC,EAAoB,EAApBA,cAE/C/S,EAAYgL,cAAZhL,QACFwS,EAAaxS,EAGb4R,EADU1P,cACYC,SAAS1E,OAAOD,MAAM,GAE5CoB,EAAQC,qBAAWmU,IARkD,EAU3ChK,mBAAS,CACrCwH,KAAM,KAXiE,mBAUpEyC,EAVoE,KAU1DC,EAV0D,OAcnDlK,mBAAS,GAd0C,mBAcpEmK,EAdoE,KAc9DC,EAd8D,KAgBrEC,EAASC,iBAAO,MAEtBC,qBAAU,WACN,IAMMxI,EAAW,IAAIyI,qBAAqBC,EAN1B,CACZC,KAAM,KACNC,WAAY,OACZC,UAAW,IAQf,OAJIP,EAAOzN,SAEPmF,EAAS8I,QAAQR,EAAOzN,SAErB,kBAAMmF,EAAS+I,gBACvB,IAKHP,qBAAU,WAUN,OATIT,GACAlU,EAAMmV,SAAS/T,EAAS4R,EAAakB,EAAYC,GAAeiB,MAAK,WAEjE,IAAMC,EAAUhB,EAASzC,KAAK0D,OAAOtV,EAAMM,MAAMV,OACjD0U,EAAY,CACR1C,KAAMyD,OAIX,kBAAiB,KACzB,CAACd,IAEJ,IAAMM,EAAiB,SAACU,GACLA,EAAS,GACbC,gBACPhB,GAAQ,SAACD,GAAD,OAAUA,EAAO,MAIjC,OACI,qCACI,sBAAKzT,UAAU,oBAAf,UACI,cAAC,IAAD,CACI+C,WAAYwQ,EAASzC,KACrB7N,WAAY,SAACnE,GAAD,OAQR,cAAC,IAAD,CACI8D,GAAI1C,EAAmBE,OACnBtB,EAAMsS,gBACNtS,EAAM+D,QACNnC,EACA5B,EAAM6B,QALd,SAQI,cAAC,GAAD,CAAa7B,MAAOA,EAAOgU,WAAYA,EAAYpS,KAAMA,SAIrE,qBAAKiI,IAAKgL,OAEE,YAAfzU,EAAM+F,MACH,qBAAKjF,UAAU,SAAf,SACI,cAAC,KAAD,CAAM0L,KAAK,QAAQC,IAAI,aAAavN,MAAO,CAAE0B,MAAO,oBC7F3D6U,GAAkB,uCAAG,WAC9BrU,EACA4R,EACAM,GAH8B,mBAAAhO,EAAA,6DAK1B2N,EAAeD,EAAYjR,MAAM,KAAK,GACtC0D,EAAc,GANY,SAUtBA,EADArE,EAAQ+R,gBAAkBF,EAAaE,cACpC,UAAMxR,GAAN,O1CKyB,sB0CLzB,OAA0CP,GAA1C,OAAoDM,EAApD,YAA8DsR,EAA9D,6CAA8GM,GAE9G,UAAM3R,GAAN,O1CIc,2B0CJd,OAA+BP,GAA/B,OAAyCM,EAAzC,+BAAsE4R,GAZnD,SAcH/N,IAAM,CACzBC,OAAQ,MACRC,IAAKA,IAhBiB,cAcpBC,EAdoB,yBAkBnB,CACHC,SAAS,EACTC,KACIxE,EAAQsU,sBAAwBzC,EAAayC,oBACvC,CAAE9V,MAAO+R,GAAoBjM,EAASE,OACtC,CACIhG,MAAO+S,GAAejN,EAASE,SAxBvB,yCA4B1BT,EAAI,EAAD,IA5BuB,kBA6BnB,CACHQ,SAAS,EACTC,KAAM,OA/BgB,0DAAH,0DCQVyN,G,WAiBjB,aAAe,yBAhBfvN,OAA6F,CACzFlG,MAAO,GACP4E,UAAW,CACP7B,KAAM,GACNM,KAAM,GACNE,IAAK,GACLsN,YAAa,GACbD,YAAa,GACbhP,KAAM,GACNC,OAAQ,IAEZ6R,cAAevC,KAAKwC,OAKV,KAHdxN,KAAa/H,EAAKgI,QAGJ,KAFdwN,SAAmB,EAGfvN,YAAeC,KAAM,CACjBJ,OAAQK,IACRJ,KAAMI,IACN7F,MAAOiG,IACP4O,SAAU9O,IAAOC,Q,mFAIzB,WACIlF,EACA4R,EACAkB,EACAC,GAJJ,0BAAA7O,EAAA,yDAMQY,KAAKH,OAAS/H,EAAKwI,QAN3B,wDAUIN,KAAKH,KAAO/H,EAAKwI,QACjBN,KAAKJ,OAAS,CACVwN,cAAepN,KAAKJ,OAAOwN,cAC3B1T,MAAO,GACP4E,UAAW0B,KAAKJ,OAAOtB,WAd/B,SAiBoCiR,GAC5BrU,EACA4R,EACA9M,KAAKJ,OAAOwN,eApBpB,mBAiBY3N,EAjBZ,EAiBYA,QAASC,EAjBrB,EAiBqBA,MAMbD,EAvBR,wBAwBQO,KAAKH,KAAO/H,EAAK0I,MAxBzB,2BA4BIC,aAAY,WACR,EAAKZ,KAAO/H,EAAKyI,QACjB,IAAIkP,EAAmB5E,KAAKwC,MACxB3N,EAAKhG,MAAMiI,OAAS,IACpB8N,EAAW/P,EAAKhG,MAAMgG,EAAKhG,MAAMiI,OAAS,GAAGmK,eAG7C,EAAKlM,OAAOwN,gBAAkBqC,GAAkC,IAAtB/P,EAAKhG,MAAMiI,OACrDsM,GAAc,IAEdA,GAAc,GACd,EAAKrO,OAAOlG,MAAQgG,EAAKhG,MACzB,EAAKkG,OAAOwN,cAAgBqC,MAxCxC,iD,8EA6CA,WAKI,OAAOzP,KAAKJ,W,KC1EPmK,I,OAAmBtE,2BAEnByI,GAAezI,0BA4EbQ,gBA1EU,WAAM,IAEnB/K,EAAYgL,cAAZhL,QAEF4R,EADU1P,cACYC,SAAS1E,OAAOD,MAAM,GAE5CgX,EAAiBhP,GAAc,kBAAM,IAAIyM,MAC/CnM,EAAS0O,EAAexP,MAAO,CAAChF,EAAS4R,GAAc,IAEvD,IAAM6C,EAAajP,GAAc,kBAAM,IAAIkP,MACrCtU,EAAOoU,EAAetV,MAAMkE,UAAUhD,KAAKhD,QAAQ,IAAK,IAVnC,EAYG4L,oBAAS,GAZZ,mBAYpBiC,EAZoB,KAYXC,EAZW,OAaOlC,oBAAS,GAbhB,mBAatB8J,EAbsB,KAaVC,EAbU,KAerB5H,EAAS,uCAAG,sBAAAjH,EAAA,6DACdsQ,EAAe7P,KAAO/H,EAAKgI,QAE3BsG,GAAW,GAHG,SAIRsJ,EAAexP,MAAMhF,EAAS4R,GAJtB,cAKd1G,GAAW,GAEXuJ,EAAW9P,KAAO/H,EAAKgI,QAEvBsG,GAAW,GATG,SAURuJ,EAAWV,SAAS/T,EAAS4R,EAAakB,EAAYC,GAV9C,OAWd7H,GAAW,GAXG,4CAAH,qDAcf,OACI,qCAC6B,YAAxBsJ,EAAe7P,MAA0C,YAApB8P,EAAW9P,OAAuBsG,GACpE,cAAC,KAAD,CAAMvL,UAAU,UAAU0L,KAAK,UAEnC,eAACyD,GAAiBlE,SAAlB,CAA2B9B,MAAO2L,EAAlC,WAC8B,YAAxBA,EAAe7P,MAA8C,YAAxB6P,EAAe7P,OAClD,mCACI,cAAC,GAAD,MAIR,cAACqO,GAAarI,SAAd,CAAuB9B,MAAO4L,EAA9B,SACI,cAAC,KAAD,CACInJ,kBAAmB,cAAC,KAAD,CAAMF,KAAK,QAAQ1L,UAAU,aAChDyL,UAAWA,EACXI,cAAc,EACd7L,UAAU,gBACV8L,kBAAmB,GACnBC,oBAAqB,GANzB,SAQI,mCACI,sBACI/L,UAAU,cACV5B,MAAO,CACH6D,WAAY,QACZgT,aAAc,gBACdC,UAAW,uBALnB,UAQI,cAAC,GAAD,IACA,cAAC,GAAD,CACIxU,KAAMA,EACN0S,WAAYA,EACZC,cAAeA,sB,UChEpC8B,GAfM,WACjB,OACI,cAAC,KAAD,CACIC,OAAO,MACPlT,MAAM,MACN+M,SAAS,8CACToG,MACI,cAAC,IAAD,CAAMzS,GAAI1C,EAAV,SACI,cAAC,KAAD,CAAQ6J,KAAK,UAAb,4B,qBCVPuL,I,OAAqB,SAAC1Q,GAC/B,MAAO,CACHoN,KAAMpN,EAASoN,KACfb,UAAWvM,EAASuM,UACpBoE,YAAa5W,EAAaiG,EAAS2Q,aACnC5P,QAASf,EAASe,QAClB0L,KAAMzM,EAASyM,KACfzO,GAAIgC,EAAShC,GACb4S,SAAU7W,EAAaiG,EAAS4Q,UAChCC,QAAS9W,EAAaiG,EAAS6Q,SAC/BC,QAAQ,IAAD,QAA2B,IAAnB9Q,EAAS6Q,QAAiB7Q,EAAS4Q,UAAU/X,QAAQ,GAA7D,MACPkY,cAAehX,EAAaiG,EAAS+Q,kBCRhCC,GAAmB,uCAAG,WAAOpV,GAAP,eAAAgE,EAAA,+EAEJC,IAAM,CACzBC,OAAQ,MACRC,IAAI,GAAD,OAAK9D,GAAL,O/CcgB,c+CdhB,OAAgCL,GAAhC,OAA4CI,KAJxB,cAErBgE,EAFqB,yBAMpB,CACHC,SAAS,EACTC,KAAMwQ,GAAmB1Q,EAASE,QARX,uCAW3BT,EAAI,EAAD,IAXwB,kBAYpB,CACHQ,SAAS,EACTC,KAAM,OAdiB,yDAAH,sDCD1B+Q,GAA+B,CACjC7D,KAAM,GACNb,UAAW,EACXoE,YAAa,IACb5P,SAAS,EACT0L,KAAM,GACNzO,GAAI,GACJ4S,SAAU,IACVC,QAAS,IACTC,QAAS,OACTC,cAAe,IAGEG,G,WAIjB,aAAe,yBAHfC,SAAyBF,GAGX,KAFd5Q,KAAa/H,EAAKgI,QAGdC,YAAeC,KAAM,CACjB2Q,SAAU1Q,IACVJ,KAAMI,IACNC,MAAOC,IAAOC,MACdwQ,QAASvQ,M,gFAIjB,WAAYjF,GAAZ,0BAAAgE,EAAA,yDACQY,KAAKH,OAAS/H,EAAKwI,SAAWN,KAAKH,OAAS/H,EAAKyI,QADzD,wDAKIP,KAAKH,KAAO/H,EAAKwI,QACjBN,KAAK2Q,SAAWF,GANpB,SAQoCD,GAAoBpV,GARxD,mBAQYqE,EARZ,EAQYA,QAASC,EARrB,EAQqBA,MACbD,EATR,wBAUQO,KAAKH,KAAO/H,EAAK0I,MAVzB,2BAaIC,aAAY,WACR,EAAKZ,KAAO/H,EAAKyI,QACjB,EAAKoQ,SAAWjR,KAfxB,iD,0EAmBA,WACI,OAAOM,KAAK2Q,a,eC1CZhX,I,OAAUC,IAAVD,OA2FOkX,GAhFoB,SAAC,GAAgB,IAAdC,EAAa,EAAbA,OAC5BhX,EAAQC,qBAAWgX,IAEnBpG,EAAO,IAAIE,KAA+B,IAA1B/Q,EAAM8W,QAAQ7E,WAC9BiF,EAAQrG,EAAKO,WACb+F,EAAUtG,EAAKS,aACf8F,EAAYF,EAAQ,GAAK,IAAM7Y,OAAO6Y,GAAOtY,OAAO,GAAKsY,EACzDG,EAAcF,EAAU,GAAK,IAAM9Y,OAAO8Y,GAASvY,OAAO,GAAKuY,EAC/DnD,EAAiBnS,EAAWmV,EAAOzV,MAAO,IAAK,IAC/C+V,EAAarZ,GAAaK,OAAO0Y,EAAOxV,MAAQlD,OAAO0V,IAAiBzV,QAAQ,GAAI,GAE1F,OACI,sBAAKuC,UAAU,qBAAf,UACI,qBAAKA,UAAU,eAAf,SACI,eAAC,GAAD,CAAOC,MAAO,EAAG7B,MAAO,CAAE0B,MAAO,SAAjC,UACK,IADL,2BAKJ,eAAC,KAAD,CACIoC,MAAM,mBACNwJ,KAAK,QACL+K,UAAU,EACVrY,MAAO,CACHgK,MAAO,OACP6M,aAAc,gBACdyB,UAAW,YACXC,WAAY,QARpB,UAWKzX,EAAM8W,QAAQhE,KACf,cAAC,GAAD,CAAY3I,KAAMnK,EAAM8W,QAAQhE,UAGpC,eAAC,KAAD,CAAM9P,MAAM,SAASwJ,KAAK,QAAQtN,MAAO,CAAEgK,MAAO,OAAQ6M,aAAc,KAAxE,UACK/V,EAAM8W,QAAQrQ,SAAW,WACxBzG,EAAM8W,QAAQrQ,SAAW,YAE/B,eAAC,KAAD,CAAMzD,MAAM,QAAQwJ,KAAK,QAAQtN,MAAO,CAAEgK,MAAO,OAAQ6M,aAAc,KAAvE,UACK/V,EAAM8W,QAAQT,YADnB,KACkCrW,EAAM8W,QAAQL,cADhD,2BAGA,eAAC,KAAD,CAAMzT,MAAM,YAAYwJ,KAAK,QAAQtN,MAAO,CAAEgK,MAAO,OAAQ6M,aAAc,KAA3E,UACKlF,EAAK6G,eADV,OAC8BN,EAD9B,IAC0CC,KAE1C,eAAC,KAAD,CACIrU,MAAM,OACNwJ,KAAK,QACLtN,MAAO,CAAEgK,MAAO,OAAQ6M,aAAc,IAAKyB,UAAW,cAH1D,UAKKxX,EAAM8W,QAAQ3E,KACf,cAAC,GAAD,CAAYhI,KAAMnK,EAAM8W,QAAQ3E,UAEpC,eAAC,KAAD,CACInP,MAAM,KACNwJ,KAAK,QACLtN,MAAO,CAAEgK,MAAO,OAAQ6M,aAAc,IAAKyB,UAAW,cAH1D,UAKKxX,EAAM8W,QAAQpT,GACf,cAAC,GAAD,CAAYyG,KAAMnK,EAAM8W,QAAQpT,QAEpC,eAAC,KAAD,CAAMV,MAAM,YAAYwJ,KAAK,QAAQtN,MAAO,CAAEgK,MAAO,OAAQ6M,aAAc,KAA3E,cACMuB,KAEN,eAAC,KAAD,CAAMtU,MAAM,QAAQwJ,KAAK,QAAQtN,MAAO,CAAEgK,MAAO,OAAQ6M,aAAc,KAAvE,UACKiB,EAAOzV,MADZ,IACoByV,EAAOvV,UAE3B,cAAC,KAAD,CAAMuB,MAAM,YAAYwJ,KAAK,QAAQtN,MAAO,CAAEgK,MAAO,OAAQ6M,aAAc,KAA3E,SACK/V,EAAM8W,QAAQR,WAEnB,eAAC,KAAD,CACItT,MAAM,0BACNwJ,KAAK,QACLtN,MAAO,CAAEgK,MAAO,OAAQ6M,aAAc,KAH1C,UAKK/V,EAAM8W,QAAQP,QALnB,IAK6BvW,EAAM8W,QAAQN,eChF1CS,GAAsBtL,0BAsBpBQ,gBApBU,WACrB,IAAMnM,EAAQ4G,GAAc,kBAAM,IAAIgQ,MAGhCI,ECpB2B,SAACvR,GAClC,IAAMkS,EAASlS,EAAI1D,MAAM,KACzB,MAAO,CACH+Q,KAAM6E,EAAO,GACbpW,MAAOoW,EAAO,GAAG/Y,MAAM+Y,EAAO,GAAGjZ,QAAQ,KAAO,GAChD8C,KAAMmW,EAAO,GAAG/Y,MAAM+Y,EAAO,GAAGjZ,QAAQ,KAAO,GAC/C+C,OAAQkW,EAAO,GAAG/Y,MAAM+Y,EAAO,GAAGjZ,QAAQ,KAAO,IDctCkZ,CADOxL,cAAd9K,WAIR,OAFA4F,EAASlH,EAAMoG,MAAO,CAAC4Q,EAAOlE,MAAO,IAGjC,qCACI,cAAC,GAAD,CAAQ9P,MAAO,GAAIyM,SAAU,MACZ,YAAfzP,EAAM+F,MAAqC,YAAf/F,EAAM+F,OAChC,cAAC,KAAD,CAAMjF,UAAU,UAAU0L,KAAK,QAAQC,IAAI,eAE/C,cAACwK,GAAoBlL,SAArB,CAA8B9B,MAAOjK,EAArC,SACoB,YAAfA,EAAM+F,MAAsB,cAAC,GAAD,CAAWiR,OAAQA,YEfhEa,KAAKC,oBAAoB,cAAC,KAAD,CAAYtL,KAAM,GAAI3B,KAAM,SAAUjK,MAAM,aAoBtDmX,OAlBf,WACI,OACI,mCACI,qBAAKjX,UAAU,MAAf,SACI,cAAC,IAAD,UACI,eAAC,IAAD,WACI,cAAC,IAAD,CAAOmL,UAAWgD,GAAa+I,OAAK,EAACC,KAAMjX,IAC3C,cAAC,IAAD,CAAOiL,UAAWiM,GAAYD,KAAMjX,EAAYC,OAChD,cAAC,IAAD,CAAOgL,UAAWkM,GAAkBF,KAAMjX,EAAWC,OACrD,cAAC,IAAD,CAAOgL,UAAWmM,GAAkBH,KAAMjX,EAAmBC,OAC7D,cAAC,IAAD,CAAOgL,UAAWgK,eCxBpCoC,I,OAAO,CACTC,OAAQ,CAJS,IACC,QAMf,SAASC,KACZ,IAAIC,EAAe3M,OAAO4M,WACtBC,EAAgB7M,OAAO8M,YAGvBC,EAAe,EALD,cAOkBP,GAAKC,OAPvB,GAOXO,EAPW,KAOEC,EAPF,KAQdN,EAAeK,IACfD,EAAeJ,EAAeK,GAE9BH,EAAgBI,IAChBF,EAAelU,KAAKqU,IAAIH,EAAcF,EAAgBI,IAG1DF,EAAelU,KAAKsU,IAAIJ,EAAc,IAEtCK,SAASC,gBAAgBha,MAAM4D,SAA/B,UAbkB,GAa2B8V,EAA7C,MChBJO,IAASC,OACL,cAAC,aAAD,UACI,cAAC,IAAD,UACI,cAAC,GAAD,QAGRH,SAASI,eAAe,SAG5BJ,SAASK,iBAAiB,oBAAoB,WAK1CzN,OAAOyN,iBAAiB,SAAUf,IAClCA,U","file":"static/js/main.79e00447.chunk.js","sourcesContent":["export enum Meta {\n    initial = 'initial',\n    loading = 'loading',\n    error = 'error',\n    success = 'success',\n}\n","export const formatMoney = (number: string | number | undefined, decimal: number | undefined) => {\n    const strNumber = String(\n        Number(number)\n            .toFixed(15)\n            .replace(/\\.?0+$/, ''),\n    );\n    const idxDel = strNumber.indexOf('.');\n    const mod = strNumber.slice(idxDel);\n    const count = mod.search(/[1-9]/);\n\n    if (count > 1 && Number(decimal) === 2) {\n        decimal = count;\n    }\n\n    const typeNumber = Number(number);\n\n    const rounded = Number(typeNumber.toFixed(decimal));\n    // return isRate\n    //     ? rounded\n    //     : new Intl.NumberFormat('en-US', {\n    //           style: 'decimal',\n    //           minimumFractionDigits: 2,\n    //           maximumFractionDigits: decimal,\n    //       }).format(rounded);\n\n    return new Intl.NumberFormat('en-US', {\n        style: 'decimal',\n        minimumFractionDigits: 2,\n        maximumFractionDigits: decimal,\n    }).format(rounded);\n};\n\nexport const formatDiff = (diff: string | number): string => {\n    const diffNum = Number(diff);\n    return String(diffNum.toFixed(2));\n};\n\nexport const formatNumber = (num: number): string => {\n    return new Intl.NumberFormat('en-US', {}).format(num);\n};\n\nexport const shortAddress = (trans: string) => {\n    return `${trans.slice(0, 5)}..${trans.slice(37)}`;\n};\n","import * as React from 'react';\nimport { Typography } from 'antd';\nimport { useContext } from 'react';\nimport { TokensContext } from '../TokensPage';\nimport './SummaryCash.scss';\nimport { ArrowDownOutlined, ArrowUpOutlined } from '@ant-design/icons';\nimport { formatMoney } from '@utils/formatMoney';\n\nconst { Title } = Typography;\n\nconst SummaryCash = () => {\n    const store = useContext(TokensContext);\n    let dailyResult = '';\n    let arrow = null;\n\n    const dailyMoneyNum = store.repos.dailyMoney;\n    const totalSumNum = Number(store.repos.totalSum);\n    const dailyProc = formatMoney(\n        100 * (-1 + totalSumNum / (totalSumNum - store.repos.dailyMoney)),\n        2,\n    );\n\n    if (dailyMoneyNum > 0) {\n        dailyResult = `+$${formatMoney(dailyMoneyNum, 2)} (+${dailyProc}%)`;\n        arrow = <ArrowUpOutlined style={{ color: 'green' }} />;\n    } else if (dailyMoneyNum < 0) {\n        dailyResult = `-$${String(formatMoney(dailyMoneyNum, 2)).slice(1)} (${dailyProc}%)`;\n        arrow = <ArrowDownOutlined style={{ color: 'red' }} />;\n    } else {\n        dailyResult = `$0 (0.00%)`;\n    }\n\n    return (\n        <div className=\"monitor\">\n            <div className=\"monitor__title\">TOTAL WALLET</div>\n            <Title className=\"main-info-cash\" level={2}>\n                <span className=\"main-info-cash__dop\">$</span>\n                <span className=\"main-info-cash__main\">\n                    {formatMoney(store?.repos.totalSum, 2)}\n                </span>\n                <span className=\"main-info-cash__dop\">USD</span>\n            </Title>\n            <div className=\"daily-profit\">\n                {dailyResult} {arrow}\n            </div>\n        </div>\n    );\n};\n\nexport default SummaryCash;\n","export const urls = {\n    MAIN: '/',\n    TOKENS: {\n        mask: '/tokens/:id',\n        create: (id: string) => `/tokens/${id}`,\n    },\n    TRANS: {\n        mask: '/transactions/:address',\n        create: (address: string, token: string | undefined) =>\n            `/transactions/${address}?token=${token}`,\n    },\n    TRANS_DETAILS: {\n        mask: '/single-transaction/:transHash',\n        create: (transHash: string, coins: string, rate: string, symbol: string) =>\n            `/single-transaction/${transHash}&coins=${coins}&rate=${rate}&symbol=${symbol}`,\n    },\n};\n\nexport const apikey = '?apiKey=EK-3HTzj-zcxPo7d-qCssY';\nexport const apiUrl = 'https://api.ethplorer.io/';\n\nexport const getAddressInfo = 'getAddressInfo/';\nexport const getAddressHistoryByToken = 'getAddressHistory/';\nexport const getEtherTrans = 'getAddressTransactions/';\nexport const getTransDetails = 'getTxInfo/';\n","export default __webpack_public_path__ + \"static/media/ethereum.23097e39.png\";","export const replaceAll = (string: string | number, search: string, replace: string): string => {\n    const newString: string = String(string);\n    return newString.split(search).join(replace);\n};\n","import { replaceAll } from '@utils/replaceALl';\nimport { formatMoney } from '@utils/formatMoney';\n\nexport const roundedRateTokens = (rate: string) => {\n    const rateNumber = Number(replaceAll(rate, ',', ''));\n    if (rateNumber > 0 && rateNumber < 1) {\n        return formatMoney(rateNumber.toFixed(2), 2);\n    }\n    return rate;\n};\n","import './Rate.scss';\nimport * as React from 'react';\nimport { replaceAll } from '@utils/replaceALl';\nimport { formatMoney } from '@utils/formatMoney';\nimport { roundedRateTokens } from '@utils/roundedRateTokens';\n\ntype Props = {\n    rate: string;\n    diff: string;\n};\n\nconst Rate: React.FC<Props> = ({ rate, diff }) => {\n    const numDiff = Number(diff);\n    const diffClassName = `stonks ${\n        numDiff > 0 ? 'stonks_up' : numDiff < 0 ? 'stonks_down' : 'stonks_static'\n    }`;\n    return (\n        <>\n            <span className=\"dollars\">{`$${roundedRateTokens(rate)} `}</span>\n            <span className={diffClassName}>{`(${numDiff > 0 ? '+' : ''}${diff}%)`}</span>\n        </>\n    );\n};\n\nexport default Rate;\n","import { Avatar, List } from 'antd';\nimport img from '@img/ethereum.png';\nimport { QuestionCircleOutlined } from '@ant-design/icons';\nimport Rate from './Rate';\nimport * as React from 'react';\n\n// @ts-ignore\nconst TokenListMeta = ({ token }) => {\n    return (\n        <List.Item.Meta\n            avatar={\n                <Avatar\n                    src={token?.symbol === 'ETH' ? img : token?.logo}\n                    icon={<QuestionCircleOutlined />}\n                    style={{ fontSize: '6rem', color: '#d3adf7', background: 'white' }}\n                />\n            }\n            title={token.name}\n            description={<Rate rate={token.rate} diff={token.dif} />}\n        />\n    );\n};\n\nexport default TokenListMeta;\n","import * as React from 'react';\nimport { List } from 'antd';\nimport './SingleToken.scss';\nimport { urls } from '@config/apiUrls';\nimport { Link, useHistory } from 'react-router-dom';\nimport TokenListMeta from './TokenListMeta';\nimport { EthToken } from '@store/models/tokens/ethToken';\nimport { formatMoney } from '@utils/formatMoney';\nimport { replaceAll } from '@utils/replaceALl';\n\ntype Props = {\n    token: EthToken;\n};\n\nconst SingleToken: React.FC<Props> = ({ token }) => {\n    const history = useHistory();\n    const addressWallet = history.location.pathname.split('/tokens/')[1];\n    const rate = Number(replaceAll(token.rate, ',', ''));\n    const price = Number(replaceAll(token.price, ',', '')).toFixed(2);\n\n    return (\n        <>\n            <Link to={urls.TRANS.create(addressWallet, token?.address)}>\n                <List.Item key={token?.address}>\n                    <TokenListMeta token={token} />\n                    <div className=\"tokens-money-cont\">\n                        <div className=\"tokens-money-cont__crypt\">${formatMoney(price, 2)}</div>\n                        <div className=\"tokens-money-cont__dollar\">\n                            {rate < 1 && formatMoney(replaceAll(token.balance, ',', ''), 3)}\n                            {rate >= 1 && token.balance}\n                            {token.symbol}\n                        </div>\n                    </div>\n                </List.Item>\n            </Link>\n        </>\n    );\n};\n\nexport default SingleToken;\n","import * as React from 'react';\nimport './Tokens.scss';\nimport { List } from 'antd';\nimport SingleToken from './SingleToken';\nimport { useContext } from 'react';\nimport { TokensContext } from '../TokensPage';\n\nconst Tokens = () => {\n    const store = useContext(TokensContext);\n    return (\n        <div className=\"tokens-list\">\n            <List\n                dataSource={store.repos.tokens}\n                renderItem={(token) => <SingleToken token={token} />}\n            />\n        </div>\n    );\n};\n\nexport default Tokens;\n","import { EthTokenArr } from '@store/models/tokens/ethToken';\nimport { formatDiff, formatMoney } from '@utils/formatMoney';\nimport { createSingleToken } from '@utils/createSingleToken';\nimport { TokensEthApiModel } from '@store/models/tokens/tokensEthApi';\n\nexport const CreateTokens = (\n    someTokens: TokensEthApiModel,\n): { tokens: EthTokenArr; totalSum: number | string; dailyMoney: number } => {\n    let totalSum = 0;\n    let dailyMoney = 0;\n    const tokensForRender = [];\n    const ethBalance = someTokens.ETH.balance * someTokens.ETH.price.rate;\n    tokensForRender.push({\n        address: String(someTokens.address),\n        symbol: 'ETH',\n        name: 'Ethereum',\n        balance: String(formatMoney(someTokens.ETH.balance, 7)),\n        price: String(formatMoney(ethBalance, 2)),\n        logo: '',\n        rate: String(formatMoney(someTokens.ETH.price.rate, 2)),\n        dif: formatDiff(someTokens.ETH.price.diff),\n    });\n    dailyMoney += (ethBalance * someTokens.ETH.price.diff) / (100 + someTokens.ETH.price.diff);\n    totalSum += ethBalance;\n    if (someTokens.tokens) {\n        someTokens.tokens.forEach((item) => {\n            if (item.tokenInfo.price) {\n                const itemBalance =\n                    Number(item.balance) / Math.pow(10, Number(item.tokenInfo.decimals));\n\n                const ItemBalanceDol = itemBalance * Number(item.tokenInfo.price.rate);\n\n                totalSum += ItemBalanceDol;\n                dailyMoney +=\n                    (ItemBalanceDol * Number(item.tokenInfo.price.diff)) /\n                    (100 + Number(item.tokenInfo.price.diff));\n                tokensForRender.push(createSingleToken(item));\n            }\n        });\n    }\n\n    return { tokens: tokensForRender, totalSum: totalSum, dailyMoney: dailyMoney };\n};\n","import { EthToken } from '@store/models/tokens/ethToken';\nimport { formatDiff, formatMoney } from '@utils/formatMoney';\nimport { TokenApiModel } from '@store/models/tokens/tokensEthApi';\n\nexport const createSingleToken = (item: TokenApiModel): EthToken => {\n    const itemInfo = item.tokenInfo;\n    const itemBalance = Number(item.balance) / Math.pow(10, Number(itemInfo.decimals));\n    if (item.tokenInfo.price) {\n        let itemPrice: any;\n        itemPrice = itemInfo.price;\n\n        const tmpPrice = itemBalance * itemPrice.rate;\n        return {\n            address: String(itemInfo.address), //адрес кошелька\n            symbol: String(itemInfo.symbol), //ETH, BTC,\n            name: String(itemInfo.name), //Ethereum, Bitcoin\n            balance: String(formatMoney(itemBalance, 7)), //мое количесто денег в валюте (битке, эфире)\n            price: String(formatMoney(tmpPrice, 2)), //мое кол-во денег в долларах (balance * rate)\n            logo: itemInfo.image ? 'https://ethplorer.io' + itemInfo.image : '', //картинка валюты\n            rate: String(formatMoney(itemPrice.rate, 2)), //курс в долларах за 1 монетку\n            dif: formatDiff(itemPrice.diff), //рост, падение за сутки\n        };\n    } else {\n        return {\n            address: String(itemInfo.address), //адрес кошелька\n            symbol: String(itemInfo.symbol), //ETH, BTC,\n            name: String(itemInfo.name), //Ethereum, Bitcoin\n            balance: String(formatMoney(itemBalance, 7)), //мое количесто денег в валюте (битке, эфире)\n            price: '0', //мое кол-во денег в долларах (balance * rate)\n            logo: itemInfo.image ? 'https://ethplorer.io' + itemInfo.image : '', //картинка валюты\n            rate: '0', //курс в долларах за 1 монетку\n            dif: '0,00', //рост, падение за сутки\n        };\n    }\n};\n","export const log = (...args: any): void => console.log(...args);\n","import axios from 'axios';\nimport { apikey, apiUrl, getAddressInfo } from '@config/apiUrls';\nimport { CreateTokens } from '@utils/createTokens';\nimport { ApiResp } from '@utils/ApiResp';\nimport { log } from '@utils/log';\n\nexport const requestTokensRepos = async (id: string): Promise<ApiResp> => {\n    try {\n        const response = await axios({\n            method: 'get',\n            url: `${apiUrl}${getAddressInfo}${id}${apikey}`,\n        });\n        return {\n            isError: false,\n            data: CreateTokens(response.data),\n        };\n    } catch (e) {\n        log(e);\n        return {\n            isError: true,\n            data: null,\n        };\n    }\n};\n","import { EthTokenArr } from '@store/models/tokens/ethToken';\nimport { Meta } from '@utils/meta';\nimport { action, computed, makeObservable, observable, runInAction } from 'mobx';\nimport { requestTokensRepos } from '@store/TokensStore/requestTokensRepos';\n\nexport default class TokensStore {\n    _repos: { tokens: EthTokenArr; totalSum: number | string; dailyMoney: number } = {\n        tokens: [],\n        totalSum: 0,\n        dailyMoney: 0,\n    };\n    meta: Meta = Meta.initial;\n\n    constructor() {\n        makeObservable(this, {\n            _repos: observable,\n            meta: observable,\n            fetch: action.bound,\n            repos: computed,\n        });\n    }\n\n    async fetch(id: string): Promise<void> {\n        if (this.meta === Meta.loading || this.meta === Meta.success) {\n            return;\n        }\n\n        this.meta = Meta.loading;\n        this._repos = {\n            tokens: this._repos.tokens,\n            totalSum: this._repos.totalSum,\n            dailyMoney: this._repos.dailyMoney,\n        };\n\n        const { isError, data } = await requestTokensRepos(id);\n        if (isError) {\n            this.meta = Meta.error;\n            return;\n        }\n\n        runInAction(() => {\n            this.meta = Meta.success;\n            this._repos = data;\n        });\n    }\n\n    get repos(): { tokens: EthTokenArr; totalSum: number | string; dailyMoney: number } {\n        return this._repos;\n    }\n}\n","import * as React from 'react';\n\nexport const useLocal = <T>(creator: () => T): T => {\n    const container = React.useRef<T | null>(null);\n\n    if (container.current === null) {\n        container.current = creator();\n    }\n\n    return container.current;\n};\n\nexport interface ILocalStore {}\n\nexport const useLocalStore = <T extends ILocalStore>(creator: () => T): T => {\n    const store = useLocal(creator);\n\n    React.useEffect(() => {\n        return () => {};\n    }, []);\n\n    return store;\n};\n","import * as React from 'react';\n\nimport { log } from '@utils/log';\n\nexport const useAsync = (func: (...[]) => Promise<any>, fetchParam: any[], inputs: any[]): void => {\n    React.useEffect(() => {\n        func(...fetchParam).catch(log);\n    }, inputs);\n};\n","function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport * as React from \"react\";\n\nfunction SvgLogout(_ref, svgRef) {\n  var title = _ref.title,\n      titleId = _ref.titleId,\n      props = _objectWithoutProperties(_ref, [\"title\", \"titleId\"]);\n\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    xmlns: \"http://www.w3.org/2000/svg\",\n    width: \"100%\",\n    height: \"100%\",\n    x: 0,\n    y: 0,\n    viewBox: \"0 0 512 512\",\n    style: {\n      enableBackground: \"new 0 0 512 512\"\n    },\n    xmlSpace: \"preserve\",\n    className: \"\",\n    ref: svgRef,\n    \"aria-labelledby\": titleId\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", {\n    id: titleId\n  }, title) : null, /*#__PURE__*/React.createElement(\"g\", null, /*#__PURE__*/React.createElement(\"g\", {\n    xmlns: \"http://www.w3.org/2000/svg\",\n    id: \"Solid\"\n  }, /*#__PURE__*/React.createElement(\"path\", {\n    d: \"m480.971 239.029-90.51-90.509a24 24 0 0 0 -33.942 0 24 24 0 0 0 0 33.941l49.54 49.539h-262.059a24 24 0 0 0 -24 24 24 24 0 0 0 24 24h262.059l-49.54 49.539a24 24 0 0 0 33.942 33.941l90.51-90.51a24 24 0 0 0 0-33.941z\",\n    fill: \"#ffffff\",\n    \"data-original\": \"#000000\",\n    style: {},\n    className: \"\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"m304 392a24 24 0 0 0 -24 24v24h-208v-368h208v24a24 24 0 0 0 48 0v-32a40 40 0 0 0 -40-40h-224a40 40 0 0 0 -40 40v384a40 40 0 0 0 40 40h224a40 40 0 0 0 40-40v-32a24 24 0 0 0 -24-24z\",\n    fill: \"#ffffff\",\n    \"data-original\": \"#000000\",\n    style: {},\n    className: \"\"\n  }))));\n}\n\nvar ForwardRef = /*#__PURE__*/React.forwardRef(SvgLogout);\nexport default __webpack_public_path__ + \"static/media/logout.408e38fc.svg\";\nexport { ForwardRef as ReactComponent };","import * as React from 'react';\nimport './QRCodePage.scss';\nimport { useContext } from 'react';\nimport { WalletAddressContext } from '../../../TokensNavBar';\nconst QRCode = require('qrcode.react');\n\nconst QRcodePage = () => {\n    const id = useContext(WalletAddressContext);\n\n    return (\n        <div className=\"qr-code-page\">\n            <div className=\"qr-code-page__qr\">\n                <QRCode value={id} />\n            </div>\n        </div>\n    );\n};\n\nexport default QRcodePage;\n","import * as React from 'react';\nimport { CopyToClipboard } from 'react-copy-to-clipboard';\nimport { CopyOutlined } from '@ant-design/icons';\nimport { useState } from 'react';\n\ntype Props = { text: string };\n\nconst DataToCopy: React.FC<Props> = ({ text }) => {\n    const [copied, setCopied] = useState(false);\n\n    return (\n        <>\n            <CopyToClipboard\n                text={text}\n                onCopy={() => {\n                    setTimeout(() => setCopied(false), 1000);\n                    setCopied(true);\n                }}\n            >\n                <CopyOutlined\n                    style={{ color: '#22075e', fontSize: '4rem', margin: '0 0.1rem 0 1rem' }}\n                />\n            </CopyToClipboard>\n            {copied && <span style={{ color: '#d3adf7' }}>Copied.</span>}\n        </>\n    );\n};\n\nexport default DataToCopy;\n","import { CopyToClipboard } from 'react-copy-to-clipboard';\nimport { CopyOutlined } from '@ant-design/icons';\nimport * as React from 'react';\nimport { Typography } from 'antd';\nimport { useContext } from 'react';\nimport { WalletAddressContext } from '../../../TokensNavBar';\nimport './TopField.scss';\nimport DataToCopy from '@components/DataToCopy';\n\nconst { Text } = Typography;\n\nconst TopField = () => {\n    const id = useContext(WalletAddressContext);\n\n    return (\n        <>\n            <div className=\"qrcode-link-fields qrcode-link-fields_bordered\">\n                <div className=\"qrcode-link-fields__title\">\n                    <Text type=\"secondary\">Scan the QR code or сopy the address below</Text>\n                </div>\n                <div className=\"qrcode-link-fields__address\">\n                    <Text strong>{id}</Text>\n                    <DataToCopy text={id} />\n                </div>\n            </div>\n        </>\n    );\n};\n\nexport default TopField;\n","import QRcodePage from './QRcodePage/QRcodePage';\nimport { Modal, Typography } from 'antd';\nimport * as React from 'react';\nimport TopField from './TopField/TopField';\nimport './ModalQR.scss';\n\nconst { Text } = Typography;\n\ntype Props = {\n    setIsModalVisible: React.Dispatch<React.SetStateAction<boolean>>;\n    isModalVisible: boolean;\n};\n\nconst ModalQR: React.FC<Props> = ({ setIsModalVisible, isModalVisible }) => {\n    const handleCancel = () => {\n        setIsModalVisible(false);\n    };\n\n    return (\n        <Modal\n            title=\"Share your address\"\n            visible={isModalVisible}\n            onCancel={handleCancel}\n            footer={null}\n            bodyStyle={{ padding: '0 0 4rem 0', height: '70%' }}\n            centered={true}\n        >\n            <div className=\"qrcode-link-fields\">\n                <QRcodePage />\n            </div>\n            <TopField />\n            <div className=\"qrcode-link-fields\">\n                <Text type=\"secondary\">\n                    Send <b>only</b> ETH Ethereum to this address. Sending any other asset will\n                    result in the loss of your deposit.\n                </Text>\n            </div>\n        </Modal>\n    );\n};\n\nexport default ModalQR;\n","import { CopyOutlined, QrcodeOutlined } from '@ant-design/icons';\nimport { Modal, Typography } from 'antd';\nimport QRCodePage from './ModalQR/QRcodePage/QRcodePage';\nimport * as React from 'react';\nimport { useContext, useState } from 'react';\nimport './OpenModal.scss';\nimport { CopyToClipboard } from 'react-copy-to-clipboard';\nimport { WalletAddressContext } from '../TokensNavBar';\nimport ModalQR from './ModalQR';\n\nconst { Text } = Typography;\n\nconst OpenModal = () => {\n    const [isModalVisible, setIsModalVisible] = useState(false);\n\n    const showModal = () => {\n        setIsModalVisible(true);\n    };\n\n    return (\n        <>\n            <div className=\"tokens-navbar__icon qr-code\">\n                <QrcodeOutlined style={{ fontSize: '5rem', color: 'white' }} onClick={showModal} />\n            </div>\n            <ModalQR setIsModalVisible={setIsModalVisible} isModalVisible={isModalVisible} />\n        </>\n    );\n};\n\nexport default OpenModal;\n","import Icon, { LogoutOutlined, QrcodeOutlined } from '@ant-design/icons';\nimport { Link } from 'react-router-dom';\nimport { urls } from '@config/apiUrls';\nimport * as React from 'react';\nimport './TokensNavBar.scss';\nimport { ReactComponent as LogoutIcon } from '@img/logout.svg';\nimport { createContext, useState } from 'react';\nimport { Modal } from 'antd';\nimport QRCodePage from './OpenModal/ModalQR/QRcodePage';\nimport OpenModal from './OpenModal';\nimport TokensStore from '@store/TokensStore';\n\ntype Props = {\n    id: string;\n};\n\nexport const WalletAddressContext = createContext<string>('');\n\nexport const TokensNavBar: React.FC<Props> = ({ id }) => {\n    return (\n        <div\n            className=\"tokens-navbar\"\n            onClick={() => {\n                window.scrollTo(0, 0);\n            }}\n        >\n            <WalletAddressContext.Provider value={id}>\n                <OpenModal />\n            </WalletAddressContext.Provider>\n            <Link to={urls.MAIN}>\n                <div className=\"tokens-navbar__icon logout\">\n                    <Icon component={LogoutIcon} style={{ fontSize: '5rem' }} />\n                </div>\n            </Link>\n        </div>\n    );\n};\n\nexport default TokensNavBar;\n","import * as React from 'react';\nimport { createContext, useState } from 'react';\nimport SummaryCash from './SummaryCash';\nimport Tokens from './Tokens';\nimport { useParams } from 'react-router-dom';\nimport TokensStore from '@store/TokensStore';\nimport { useLocalStore } from '@utils/useLocal';\nimport { useAsync } from '@utils/useAsync';\nimport { observer } from 'mobx-react-lite';\nimport { Spin } from 'antd';\nimport './TokensPage.scss';\nimport TokensNavBar from './TokensNavBar/TokensNavBar';\nimport PullToRefresh from 'react-simple-pull-to-refresh';\nimport { Meta } from '@utils/meta';\n\n// @ts-ignore\nexport const TokensContext = createContext<TokensStore>();\n\nconst TokensPage = () => {\n    // @ts-ignore\n    const { id } = useParams();\n\n    const store = useLocalStore(() => new TokensStore());\n    useAsync(store.fetch, [id], []);\n\n    const [refresh, setRefresh] = useState(false);\n\n    const onRefresh = async () => {\n        store.meta = Meta.initial;\n        setRefresh(true);\n        await store.fetch(id);\n        setRefresh(false);\n    };\n\n    return (\n        <>\n            {store.meta === 'initial' && <TokensNavBar id={id} />}\n            {store.meta === 'loading' && !refresh && (\n                <Spin className=\"loading\" size=\"large\" tip=\"Loading...\" />\n            )}\n            <TokensContext.Provider value={store}>\n                {(store.meta === 'success' || (store.meta === 'loading' && refresh)) && (\n                    <>\n                        <TokensNavBar id={id} />\n                        <SummaryCash />\n                        <PullToRefresh\n                            refreshingContent={<Spin size=\"large\" className=\"spinning\" />}\n                            onRefresh={onRefresh}\n                            canFetchMore={false}\n                            pullDownThreshold={30}\n                            maxPullDownDistance={70}\n                            className=\"tokens-ptr\"\n                        >\n                            <Tokens />\n                        </PullToRefresh>\n                    </>\n                )}\n            </TokensContext.Provider>\n        </>\n    );\n};\n\nexport default observer(TokensPage);\n","import * as React from 'react';\nimport * as antd from 'antd';\nimport './HelloText.scss';\nconst { Typography } = antd;\nconst { Title, Text } = Typography;\n\nconst HelloText = () => {\n    return (\n        <>\n            <div className=\"hello-text\">\n                <div className=\"hello-text-title\">\n                    <Title className=\"hello-text__text\" level={1}></Title>\n                    <Title className=\"hello-text__text hello-text__text_purple\" level={1}>\n                        CryptoMargot\n                    </Title>\n                    <Text className=\"hello-text__text hello-text__text_grey\" type=\"secondary\">\n                        It is a free client interface to help you interact with the Ethereum\n                        blockchain\n                    </Text>\n                    <Text className=\"hello-text__text\">\n                        <b>Swipe to select</b> a type of authorization\n                    </Text>\n                </div>\n            </div>\n        </>\n    );\n};\n\nexport default HelloText;\n","import React, { useState } from 'react';\nimport TextArea from 'antd/es/input/TextArea';\nimport { Form, Button } from 'antd';\nimport './SearchTextarea.scss';\nimport { useHistory } from 'react-router-dom';\nconst { EthHdWallet } = require('eth-hd-wallet');\n\nconst SearchTextarea = () => {\n    const history = useHistory();\n    const [address, setAddress] = useState('');\n    const [isError, setError] = useState(false);\n\n    const onFinish = () => {\n        history.push(`tokens/${address}`);\n    };\n\n    return (\n        <Form name=\"input-mnemonics\" onFinish={onFinish}>\n            <Form.Item\n                initialValue=\"crop truly stuff sing course hour six rescue mass aunt invest dose will local empower\"\n                name=\"mnemonics\"\n                label=\"Mnemonic phrase\"\n                rules={[\n                    { required: true, message: 'Please input your mnemonic!' },\n                    () => ({\n                        validator(_, value) {\n                            try {\n                                const wallet = EthHdWallet.fromMnemonic(\n                                    value.replace(/\\s+/g, ' ').trim(),\n                                );\n                                setAddress(wallet.generateAddresses(1));\n                                setError(false);\n                                return Promise.resolve();\n                            } catch (e) {\n                                setError(true);\n                                return Promise.reject('Enter a correct Eth mnemonic!');\n                            }\n                        },\n                    }),\n                ]}\n            >\n                <TextArea\n                    placeholder=\"Example: crop truly stuff sing course hour six rescue mass aunt invest dose will local empower\"\n                    autoSize={{ minRows: 3, maxRows: 5 }}\n                    allowClear\n                />\n            </Form.Item>\n            <Form.Item>\n                <Button type=\"primary\" disabled={isError} htmlType=\"submit\">\n                    Submit\n                </Button>\n            </Form.Item>\n        </Form>\n    );\n};\n\nexport default SearchTextarea;\n","import { Button, Form, Input } from 'antd';\nimport * as React from 'react';\nimport { useState } from 'react';\n\nconst InputFormItem = () => {\n    const [isError, setError] = useState(false);\n\n    return (\n        <>\n            <Form.Item\n                initialValue=\"0x83f73618d8a9836BaE168F5ab0B5643C29Ae2582\"\n                name=\"address\"\n                label=\"Address\"\n                rules={[\n                    { required: true, message: 'Please input your address!' },\n                    () => ({\n                        validator(_, value) {\n                            const reg = new RegExp('0x[0-9a-fA-F]{40}');\n                            if (!value || value.search(reg) != -1) {\n                                setError(false);\n                                return Promise.resolve();\n                            }\n                            setError(true);\n                            return Promise.reject('Enter a correct Eth address!');\n                        },\n                    }),\n                ]}\n            >\n                <Input\n                    allowClear\n                    placeholder=\"Example: 0x6f2e19b1dac147587ab8ad3a3ff556a5f2bb332a\"\n                />\n            </Form.Item>\n            <Form.Item>\n                <Button type=\"primary\" disabled={isError} htmlType=\"submit\">\n                    Submit\n                </Button>\n            </Form.Item>\n        </>\n    );\n};\n\nexport default InputFormItem;\n","import { Button, Form, Input } from 'antd';\nimport * as React from 'react';\nimport { useHistory } from 'react-router-dom';\nimport InputFormItem from './InputFormItem';\n\nconst SearchAddress = () => {\n    const history = useHistory();\n\n    const onFinish = (value: any) => {\n        history.push(`tokens/${value.address}`);\n    };\n\n    return (\n        <Form name=\"input-address\" onFinish={onFinish}>\n            <InputFormItem />\n        </Form>\n    );\n};\n\nexport default SearchAddress;\n","import * as React from 'react';\nimport './WelcomePage.scss';\nimport HelloText from './HelloText';\nimport SearchTextarea from './SearchTextarea';\nimport SearchAddress from './SearchAddress';\nimport Slider from 'react-slick';\nimport 'slick-carousel/slick/slick.css';\nimport 'slick-carousel/slick/slick-theme.css';\n\nconst WelcomePage = () => {\n    const settings = {\n        dots: true,\n        infinite: false,\n        speed: 500,\n        slidesToShow: 1,\n        slidesToScroll: 1,\n        initialSlide: 0,\n    };\n\n    return (\n        <div className=\"welcome-bg\">\n            <HelloText />\n            <Slider {...settings}>\n                <div className=\"input-window\">\n                    <SearchTextarea />\n                </div>\n                <div className=\"input-window\">\n                    <SearchAddress />\n                </div>\n            </Slider>\n        </div>\n    );\n};\n\nexport default WelcomePage;\n","import * as React from 'react';\nimport { Button, PageHeader } from 'antd';\nimport { useHistory } from 'react-router-dom';\nimport './NavBar.scss';\nimport { ArrowLeftOutlined, ArrowsAltOutlined, LogoutOutlined } from '@ant-design/icons';\n\ntype Props = {\n    title: string;\n    subtitle?: string;\n};\n\nconst NavBar: React.FC<Props> = ({ title, subtitle }) => {\n    const history = useHistory();\n\n    return (\n        <>\n            <div\n                className=\"site-page-header-ghost-wrapper\"\n                onClick={() => {\n                    window.scrollTo(0, 0);\n                }}\n            >\n                <PageHeader\n                    backIcon={<ArrowLeftOutlined style={{ color: 'white', fontSize: '5rem' }} />}\n                    ghost={false}\n                    onBack={() => {\n                        history.goBack();\n                    }}\n                    title={<div className=\"navbar-slogan\">{title}</div>}\n                    subTitle={<div className=\"navbar-slogan\">{subtitle}</div>}\n                />\n            </div>\n        </>\n    );\n};\n\nexport default NavBar;\n","import NavBar from '@components/NavBar';\nimport * as React from 'react';\nimport { useContext } from 'react';\nimport { TransInfoContext } from '../TransactionsPage';\n\nconst FillInNavBar = () => {\n    const store = useContext(TransInfoContext);\n    const titleNavBar = `${store.repos.tokenInfo.name} ${store.repos.tokenInfo.symbol}`;\n    return <NavBar title={titleNavBar} subtitle={''} />;\n};\n\nexport default FillInNavBar;\n","import * as React from 'react';\nimport './Coin.scss';\nimport '@styles/variables.scss';\n\ntype Props = {\n    rate: string;\n    dif: string;\n};\n\nconst Coin: React.FC<Props> = ({ rate, dif }) => {\n    const diff = Number(dif);\n    return (\n        <>\n            <div className=\"coin-line\">\n                <div className=\"coin-line-right\">\n                    <div className=\"dollars coin-line-right__dollars\">${rate}</div>\n                    <div\n                        className={\n                            diff > 0 ? 'stonks_up' : diff < 0 ? 'stonks_down' : 'stonks_static'\n                        }\n                    >\n                        {diff > 0 ? '+' : ''}\n                        {dif}%\n                    </div>\n                </div>\n            </div>\n        </>\n    );\n};\n\nexport default Coin;\n","import React from 'react';\nimport { Avatar } from 'antd';\nimport { QuestionCircleOutlined } from '@ant-design/icons';\nimport './DisplayToken.scss';\nimport imgEth from '@img/ethereum.png';\nimport { replaceAll } from '@utils/replaceALl';\nimport { formatMoney } from '@utils/formatMoney';\n\ntype Props = {\n    logo: string;\n    balance: string;\n    price: string;\n    symbol: string;\n};\n\nconst DisplayToken: React.FC<Props> = ({ logo, balance, price, symbol }) => {\n    const clearPrice = formatMoney(Number(replaceAll(price, ',', '')).toFixed(2), 2);\n\n    return (\n        <div className=\"personal-token-info\">\n            <Avatar\n                src={symbol === 'ETH' ? imgEth : logo}\n                size={64}\n                icon={<QuestionCircleOutlined />}\n                style={{ fontSize: '11rem', color: '#d3adf7', background: 'white' }}\n            />\n            <div className=\"personal-token-info__balance\">${clearPrice}</div>\n            <div className=\"personal-token-info__price\">\n                {balance} {symbol}\n            </div>\n        </div>\n    );\n};\n\nexport default DisplayToken;\n","import * as React from 'react';\nimport Coin from './Coin';\nimport './TokenInfo.scss';\nimport DisplayToken from './DisplayToken';\nimport { useContext } from 'react';\nimport { TransInfoContext } from '../TransactionsPage';\n\nconst TokenInfo = () => {\n    const store = useContext(TransInfoContext);\n\n    return (\n        <>\n            <div className=\"token-info-block\">\n                <Coin rate={store.repos.tokenInfo.rate} dif={store.repos.tokenInfo.dif} />\n                <DisplayToken\n                    logo={store.repos.tokenInfo.logo}\n                    balance={store.repos.tokenInfo.totalCrypto}\n                    price={store.repos.tokenInfo.totalDollar}\n                    symbol={store.repos.tokenInfo.symbol}\n                />\n            </div>\n        </>\n    );\n};\n\nexport default TokenInfo;\n","const dayOfWeek = ['Mon', 'Tue', 'Wed', 'Thu', 'Fri', 'Sat', 'Sun'];\nconst month = [\n    'Jan',\n    'Feb',\n    'Mar',\n    'Apr',\n    'May',\n    'June',\n    'Jule',\n    'Aug',\n    'Sept',\n    'Oct',\n    'Nov',\n    'Dec',\n];\n\nexport const convertDate = (date: number) => {\n    const newDate = new Date(date * 1000);\n    const today = new Date();\n    const diff = Math.floor((today.getTime() - newDate.getTime()) / (1000 * 60 * 60 * 24));\n    const hh = newDate.getHours() <= 9 ? '0' + newDate.getHours() : newDate.getHours();\n    const mm = newDate.getMinutes() <= 9 ? '0' + newDate.getMinutes() : newDate.getMinutes();\n    if (!diff && newDate.getDay() === today.getDay()) {\n        return `Today ${hh}:${mm}`;\n    } else if (diff < 7) {\n        return `${dayOfWeek[newDate.getDay()]} ${hh}:${mm}`;\n    } else {\n        return `${newDate.getDate()} ${month[newDate.getMonth()]} ${newDate.getFullYear()}`;\n    }\n};\n","import {\n    SingleTransaction,\n    TokenInfoDisplay,\n    TransactionsEthApi,\n} from '@store/models/transactions/transactionsEthApi';\nimport { convertDate } from '@utils/convertDate';\nimport { formatDiff, formatMoney } from '@utils/formatMoney';\nimport { TokenApiModel } from '@store/models/tokens/tokensEthApi';\n\nexport const createListTransPage = (list: TransactionsEthApi): SingleTransaction[] => {\n    let formedList: SingleTransaction[] = [];\n\n    list.operations.forEach((item) => {\n        const tmpBalance = Number(item.value) / Math.pow(10, Number(item.tokenInfo.decimals));\n        formedList.push({\n            unixTimestamp: item.timestamp,\n            transactionHash: item.transactionHash,\n            timestamp: convertDate(item.timestamp),\n            balance: String(formatMoney(tmpBalance, 7)),\n            to: item.to,\n            from: item.from,\n            symbol: item.tokenInfo.symbol,\n        });\n    });\n\n    return formedList;\n};\n\nexport const listTransInfo = (\n    tokensInformation: TokenApiModel[],\n    tokensAddr: string,\n): TokenInfoDisplay => {\n    let foundedTokenInfo: TokenApiModel = {\n        tokenInfo: {\n            address: '',\n            name: '',\n            decimals: '',\n            symbol: '',\n            image: '',\n            price: {\n                rate: '',\n                diff: '',\n            },\n        },\n        balance: '',\n    };\n\n    let tokenInfoDisplay: TokenInfoDisplay = {\n        logo: '',\n        name: '',\n        dif: '',\n        totalDollar: '',\n        totalCrypto: '',\n        rate: '',\n        symbol: '',\n    };\n\n    tokensInformation.forEach((singleToken) => {\n        if (singleToken.tokenInfo.address === tokensAddr) {\n            foundedTokenInfo = singleToken;\n        }\n    });\n\n    if (foundedTokenInfo) {\n        const tokenInfoPrice = foundedTokenInfo.tokenInfo.price;\n        const totalCrypto =\n            Number(foundedTokenInfo.balance) /\n            Math.pow(10, Number(foundedTokenInfo.tokenInfo.decimals));\n        tokenInfoDisplay = {\n            logo: foundedTokenInfo.tokenInfo.image\n                ? 'https://ethplorer.io' + foundedTokenInfo.tokenInfo.image\n                : '',\n            name: foundedTokenInfo.tokenInfo.name,\n            dif: tokenInfoPrice ? formatDiff(foundedTokenInfo.tokenInfo.price.diff) : '0,00',\n            totalCrypto: totalCrypto ? String(formatMoney(totalCrypto, 7)) : '0',\n            totalDollar: tokenInfoPrice\n                ? String(\n                      formatMoney(totalCrypto * Number(foundedTokenInfo.tokenInfo.price.rate), 2),\n                  )\n                : '0',\n            rate: tokenInfoPrice\n                ? String(formatMoney(foundedTokenInfo.tokenInfo.price.rate, 2))\n                : '0',\n            symbol: foundedTokenInfo.tokenInfo.symbol,\n        };\n    }\n\n    return tokenInfoDisplay;\n};\n","import { EtherTransApi, SingleTransaction } from '@store/models/transactions/transactionsEthApi';\nimport { convertDate } from '@utils/convertDate';\nimport { formatDiff, formatMoney } from '@utils/formatMoney';\nimport imgEth from '@img/ethereum.png';\nimport { TokensEthApiModel } from '@store/models/tokens/tokensEthApi';\n\nexport const createEthTrans = (transactions: EtherTransApi[]): SingleTransaction[] => {\n    let formedData: SingleTransaction[] = [];\n\n    if (transactions.length > 0) {\n        transactions.forEach((item) => {\n            formedData.push({\n                unixTimestamp: item.timestamp,\n                transactionHash: item.hash,\n                timestamp: convertDate(item.timestamp),\n                balance: String(formatMoney(item.value, 7)),\n                to: item.to,\n                from: item.from,\n                symbol: 'ETH',\n            });\n        });\n    } else {\n        formedData = [];\n    }\n    return formedData;\n};\n\nexport const ethTransInfo = (etherInfo: TokensEthApiModel) => {\n    return {\n        logo: imgEth,\n        name: 'Ethereum',\n        dif: formatDiff(etherInfo.ETH.price.diff),\n        totalCrypto: String(formatMoney(etherInfo.ETH.balance, 7)),\n        totalDollar: String(formatMoney(etherInfo.ETH.balance * etherInfo.ETH.price.rate, 2)),\n        rate: String(formatMoney(etherInfo.ETH.price.rate, 2)),\n        symbol: 'ETH',\n    };\n};\n","import { ApiResp } from '@utils/ApiResp';\nimport axios from 'axios';\nimport {\n    apikey,\n    apiUrl,\n    getAddressHistoryByToken,\n    getAddressInfo,\n    getEtherTrans,\n} from '@config/apiUrls';\nimport { log } from '@utils/log';\nimport { createListTransPage, listTransInfo } from '@utils/createListTransPage';\nimport { createEthTrans, ethTransInfo } from '@utils/createEthTrans';\n\nexport const requestTransactions = async (\n    address: string,\n    searchToken: string,\n): Promise<ApiResp> => {\n    let tokenAddress = searchToken.split('=')[1];\n    try {\n        const response2 = await axios({\n            method: 'get',\n            url: `${apiUrl}${getAddressInfo}${address}${apikey}`,\n        });\n        return {\n            isError: false,\n            data: {\n                tokenInfo:\n                    address.toUpperCase() !== tokenAddress.toUpperCase()\n                        ? listTransInfo(response2.data.tokens, tokenAddress)\n                        : ethTransInfo(response2.data),\n            },\n        };\n    } catch (e) {\n        log(e);\n        return {\n            isError: true,\n            data: null,\n        };\n    }\n};\n","import {\n    action,\n    computed,\n    IReactionDisposer,\n    makeObservable,\n    observable,\n    reaction,\n    runInAction,\n} from 'mobx';\nimport { Meta } from '@utils/meta';\nimport { SingleTransaction, TokenInfoDisplay } from '@store/models/transactions/transactionsEthApi';\nimport { requestTransactions } from '@store/TokenInfoStore/requestTransactions';\n\nexport default class TokenInfoStore {\n    _repos: { trans: SingleTransaction[]; tokenInfo: TokenInfoDisplay; lastTransTime: number } = {\n        trans: [],\n        tokenInfo: {\n            logo: 'eth',\n            name: '',\n            dif: '0.00',\n            totalDollar: '0.00',\n            totalCrypto: '0.00',\n            rate: '',\n            symbol: '',\n        },\n        lastTransTime: Date.now(),\n    };\n    meta: Meta = Meta.initial;\n    isFirst: Boolean = true;\n\n    constructor() {\n        makeObservable(this, {\n            _repos: observable,\n            meta: observable,\n            fetch: action.bound,\n            repos: computed,\n            // loadMore: action.bound,\n        });\n    }\n\n    async fetch(address: string, searchToken: string): Promise<void> {\n        if (this.meta === Meta.loading || this.meta === Meta.success) {\n            return;\n        }\n\n        this.meta = Meta.loading;\n        this._repos = {\n            lastTransTime: this._repos.lastTransTime,\n            trans: this._repos.trans,\n            tokenInfo: this._repos.tokenInfo,\n        };\n\n        const { isError, data } = await requestTransactions(address, searchToken);\n\n        if (isError) {\n            this.meta = Meta.error;\n            return;\n        }\n\n        runInAction(() => {\n            this.meta = Meta.success;\n            this._repos.tokenInfo = data.tokenInfo;\n        });\n    }\n\n    get repos(): {\n        lastTransTime: number;\n        trans: SingleTransaction[];\n        tokenInfo: TokenInfoDisplay;\n    } {\n        return this._repos;\n    }\n}\n","function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport * as React from \"react\";\n\nfunction SvgSend(_ref, svgRef) {\n  var title = _ref.title,\n      titleId = _ref.titleId,\n      props = _objectWithoutProperties(_ref, [\"title\", \"titleId\"]);\n\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    xmlns: \"http://www.w3.org/2000/svg\",\n    width: \"100%\",\n    height: \"100%\",\n    x: 0,\n    y: 0,\n    viewBox: \"0 0 64 64\",\n    style: {\n      enableBackground: \"new 0 0 512 512\"\n    },\n    xmlSpace: \"preserve\",\n    className: \"\",\n    ref: svgRef,\n    \"aria-labelledby\": titleId\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", {\n    id: titleId\n  }, title) : null, /*#__PURE__*/React.createElement(\"g\", null, /*#__PURE__*/React.createElement(\"path\", {\n    xmlns: \"http://www.w3.org/2000/svg\",\n    d: \"m53 8h-23.899c-1.104 0-2 .896-2 2s.896 2 2 2h21.071l-40.586 40.586c-.781.781-.781 2.047 0 2.828.39.391.902.586 1.414.586s1.024-.195 1.414-.586l40.586-40.586v21.071c0 1.104.896 2 2 2s2-.896 2-2v-23.899c0-2.206-1.794-4-4-4z\",\n    fill: \"#ff0000\",\n    style: {},\n    className: \"\"\n  })));\n}\n\nvar ForwardRef = /*#__PURE__*/React.forwardRef(SvgSend);\nexport default __webpack_public_path__ + \"static/media/send.92ceeb2c.svg\";\nexport { ForwardRef as ReactComponent };","function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport * as React from \"react\";\n\nfunction SvgReceive(_ref, svgRef) {\n  var title = _ref.title,\n      titleId = _ref.titleId,\n      props = _objectWithoutProperties(_ref, [\"title\", \"titleId\"]);\n\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    xmlns: \"http://www.w3.org/2000/svg\",\n    width: \"100%\",\n    height: \"100%\",\n    x: 0,\n    y: 0,\n    viewBox: \"0 0 64 64\",\n    style: {\n      enableBackground: \"new 0 0 512 512\"\n    },\n    xmlSpace: \"preserve\",\n    className: \"\",\n    ref: svgRef,\n    \"aria-labelledby\": titleId\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", {\n    id: titleId\n  }, title) : null, /*#__PURE__*/React.createElement(\"g\", null, /*#__PURE__*/React.createElement(\"path\", {\n    xmlns: \"http://www.w3.org/2000/svg\",\n    d: \"m53.586 8.586-40.586 40.586v-21.071c0-1.104-.896-2-2-2s-2 .896-2 2v23.899c0 2.206 1.794 4 4 4h23.899c1.104 0 2-.896 2-2s-.896-2-2-2h-21.071l40.586-40.586c.781-.781.781-2.047 0-2.828s-2.047-.781-2.828 0z\",\n    fill: \"#008000\",\n    \"data-original\": \"#000000\",\n    style: {}\n  })));\n}\n\nvar ForwardRef = /*#__PURE__*/React.forwardRef(SvgReceive);\nexport default __webpack_public_path__ + \"static/media/receive.24d1e294.svg\";\nexport { ForwardRef as ReactComponent };","import * as React from 'react';\nimport { Avatar, List } from 'antd';\nimport './SingleTrans.scss';\nimport Icon from '@ant-design/icons';\nimport { formatMoney, shortAddress } from '@utils/formatMoney';\nimport { ReactComponent as SendIcon } from '@img/send.svg';\nimport { ReactComponent as Receive } from '@img/receive.svg';\nimport { replaceAll } from '@utils/replaceALl';\n\ntype Props = {\n    trans: {\n        transactionHash: string;\n        timestamp: string;\n        balance: string;\n        to: string;\n        from: string;\n        symbol: string;\n    };\n    reqAddress: string;\n    rate: string;\n};\n\nconst SingleTrans: React.FC<Props> = ({ trans, reqAddress, rate }) => {\n    const isSend = reqAddress.toUpperCase() === trans.from.toUpperCase();\n    const description = isSend\n        ? `To: ${shortAddress(trans.to)}`\n        : `From: ${shortAddress(trans.from)}`;\n    const style = isSend ? 'red' : 'green';\n    const icon = isSend ? <Icon component={SendIcon} /> : <Icon component={Receive} />;\n    const balanceReplace = replaceAll(trans.balance, ',', '');\n\n    return (\n        <>\n            <List.Item key={trans.transactionHash}>\n                <List.Item.Meta\n                    title={trans.timestamp}\n                    description={description}\n                    avatar={\n                        <Avatar\n                            size={'small'}\n                            icon={icon}\n                            style={{ color: `${style}`, background: 'white', fontSize: '4rem' }}\n                        />\n                    }\n                />\n                <div className=\"tokens-money-cont\">\n                    <div className={`tokens-money-cont__crypt `}>\n                        {isSend ? '-' : ''}$\n                        {formatMoney((Number(rate) * Number(balanceReplace)).toFixed(2), 2)}\n                    </div>\n                    <div\n                        className={`tokens-money-cont__dollar ${\n                            isSend ? 'stonks_down' : 'stonks_up'\n                        }`}\n                    >\n                        {isSend ? '-' : ''}\n                        {Number(rate) < 1 && formatMoney(balanceReplace, 3)}\n                        {Number(rate) >= 1 && formatMoney(balanceReplace, 7)}\n                        {trans.symbol}\n                    </div>\n                </div>\n            </List.Item>\n        </>\n    );\n};\n\nexport default SingleTrans;\n","import { List, Spin } from 'antd';\nimport * as React from 'react';\nimport { useContext, useEffect, useRef, useState } from 'react';\nimport SingleTrans from './SingleTrans';\nimport './Transactions.scss';\nimport { Link, useHistory, useParams } from 'react-router-dom';\nimport { TransContext } from '../TransactionsPage';\nimport { urls } from '@config/apiUrls';\n\ntype Props = {\n    rate: string;\n    setNeedSearch: React.Dispatch<React.SetStateAction<boolean>>;\n    needSearch: boolean;\n};\n\nconst Transactions: React.FC<Props> = ({ rate, needSearch, setNeedSearch }) => {\n    // @ts-ignore\n    const { address } = useParams();\n    const reqAddress = address;\n\n    const history = useHistory();\n    const searchToken = history.location.search.slice(1);\n\n    const store = useContext(TransContext);\n\n    const [postList, setPostList] = useState({\n        list: [],\n    });\n\n    const [page, setPage] = useState(1);\n    // let [needSearch, setNeedSearch] = useState(true);\n    const loader = useRef(null);\n\n    useEffect(() => {\n        const options = {\n            root: null,\n            rootMargin: '20px',\n            threshold: 1.0,\n        };\n\n        const observer = new IntersectionObserver(handleObserver, options);\n        if (loader.current) {\n            // @ts-ignore\n            observer.observe(loader.current);\n        }\n        return () => observer.disconnect();\n    }, []);\n\n    let mounted = true;\n\n    // @ts-ignore\n    useEffect(() => {\n        if (needSearch) {\n            store.loadMore(address, searchToken, needSearch, setNeedSearch).then(() => {\n                // @ts-ignore\n                const newList = postList.list.concat(store.repos.trans);\n                setPostList({\n                    list: newList,\n                });\n            });\n        }\n        return () => (mounted = false);\n    }, [page]);\n\n    const handleObserver = (entities: any[]) => {\n        const target = entities[0];\n        if (target.isIntersecting) {\n            setPage((page) => page + 1);\n        }\n    };\n\n    return (\n        <>\n            <div className=\"transactions-list\">\n                <List\n                    dataSource={postList.list}\n                    renderItem={(trans: {\n                        transactionHash: string;\n                        timestamp: string;\n                        balance: string;\n                        to: string;\n                        from: string;\n                        symbol: string;\n                    }) => (\n                        <Link\n                            to={urls.TRANS_DETAILS.create(\n                                trans.transactionHash,\n                                trans.balance,\n                                rate,\n                                trans.symbol,\n                            )}\n                        >\n                            <SingleTrans trans={trans} reqAddress={reqAddress} rate={rate} />\n                        </Link>\n                    )}\n                />\n                <div ref={loader} />\n            </div>\n            {store.meta === 'loading' && (\n                <div className=\"loader\">\n                    <Spin size=\"large\" tip=\"Loading...\" style={{ color: '#d3adf7' }} />\n                </div>\n            )}\n        </>\n    );\n};\n\nexport default Transactions;\n","import { ApiResp } from '@utils/ApiResp';\nimport { apikey, apiUrl, getAddressHistoryByToken, getEtherTrans } from '@config/apiUrls';\nimport axios from 'axios';\nimport { createListTransPage } from '@utils/createListTransPage';\nimport { createEthTrans } from '@utils/createEthTrans';\nimport { log } from '@utils/log';\n\nexport const requestUploadTrans = async (\n    address: string,\n    searchToken: string,\n    lastTransTime: number,\n): Promise<ApiResp> => {\n    let tokenAddress = searchToken.split('=')[1];\n    let url: string = '';\n\n    try {\n        if (address.toUpperCase() !== tokenAddress.toUpperCase()) {\n            url = `${apiUrl}${getAddressHistoryByToken}${address}${apikey}&${searchToken}&type=transfer&limit=10&timestamp=${lastTransTime}`;\n        } else {\n            url = `${apiUrl}${getEtherTrans}${address}${apikey}&limit=50&timestamp=${lastTransTime}`;\n        }\n        const response = await axios({\n            method: 'get',\n            url: url,\n        });\n        return {\n            isError: false,\n            data:\n                address.toLocaleUpperCase() !== tokenAddress.toLocaleUpperCase()\n                    ? { trans: createListTransPage(response.data) }\n                    : {\n                          trans: createEthTrans(response.data),\n                      },\n        };\n    } catch (e) {\n        log(e);\n        return {\n            isError: true,\n            data: null,\n        };\n    }\n};\n","import {\n    action,\n    computed,\n    IReactionDisposer,\n    makeObservable,\n    observable,\n    reaction,\n    runInAction,\n} from 'mobx';\nimport { Meta } from '@utils/meta';\nimport { SingleTransaction, TokenInfoDisplay } from '@store/models/transactions/transactionsEthApi';\nimport { log } from '@utils/log';\nimport { requestUploadTrans } from '@store/UploadTransStore/requestUploadTrans';\nimport React from 'react';\n\nexport default class TokenInfoStore {\n    _repos: { trans: SingleTransaction[]; tokenInfo: TokenInfoDisplay; lastTransTime: number } = {\n        trans: [],\n        tokenInfo: {\n            logo: '',\n            name: '',\n            dif: '',\n            totalDollar: '',\n            totalCrypto: '',\n            rate: '',\n            symbol: '',\n        },\n        lastTransTime: Date.now(),\n    };\n    meta: Meta = Meta.initial;\n    isFirst: Boolean = true;\n\n    constructor() {\n        makeObservable(this, {\n            _repos: observable,\n            meta: observable,\n            repos: computed,\n            loadMore: action.bound,\n        });\n    }\n\n    async loadMore(\n        address: string,\n        searchToken: string,\n        needSearch: boolean,\n        setNeedSearch: React.Dispatch<React.SetStateAction<boolean>>,\n    ): Promise<void> {\n        if (this.meta === Meta.loading) {\n            return;\n        }\n\n        this.meta = Meta.loading;\n        this._repos = {\n            lastTransTime: this._repos.lastTransTime,\n            trans: [],\n            tokenInfo: this._repos.tokenInfo,\n        };\n\n        const { isError, data } = await requestUploadTrans(\n            address,\n            searchToken,\n            this._repos.lastTransTime,\n        );\n\n        if (isError) {\n            this.meta = Meta.error;\n            return;\n        }\n\n        runInAction(() => {\n            this.meta = Meta.success;\n            let lastDate: number = Date.now();\n            if (data.trans.length > 0) {\n                lastDate = data.trans[data.trans.length - 1].unixTimestamp;\n            }\n\n            if (this._repos.lastTransTime === lastDate || data.trans.length === 0) {\n                setNeedSearch(false);\n            } else {\n                setNeedSearch(true);\n                this._repos.trans = data.trans;\n                this._repos.lastTransTime = lastDate;\n            }\n        });\n    }\n\n    get repos(): {\n        lastTransTime: number;\n        trans: SingleTransaction[];\n        tokenInfo: TokenInfoDisplay;\n    } {\n        return this._repos;\n    }\n}\n","import * as React from 'react';\nimport { createContext, useState } from 'react';\nimport FillInNavBar from './FillInNavBar';\nimport TokenInfo from './TokenInfo';\nimport TokenInfoStore from '@store/TokenInfoStore';\nimport { useLocalStore } from '@utils/useLocal';\nimport { useAsync } from '@utils/useAsync';\nimport { useHistory, useParams } from 'react-router-dom';\nimport { observer } from 'mobx-react-lite';\nimport Transactions from './Transactions';\nimport UploadTransStore from '@store/UploadTransStore/UploadTransStore';\nimport { Spin } from 'antd';\nimport PullToRefresh from 'react-simple-pull-to-refresh';\nimport { Meta } from '@utils/meta';\nimport './TransactionsPage.scss';\n\n// @ts-ignore\nexport const TransInfoContext = createContext<TokenInfoStore>();\n// @ts-ignore\nexport const TransContext = createContext<UploadTransStore>();\n\nconst TransactionsPage = () => {\n    // @ts-ignore\n    const { address } = useParams();\n    const history = useHistory();\n    const searchToken = history.location.search.slice(1);\n\n    const storeTransInfo = useLocalStore(() => new TokenInfoStore());\n    useAsync(storeTransInfo.fetch, [address, searchToken], []);\n\n    const storeTrans = useLocalStore(() => new UploadTransStore());\n    const rate = storeTransInfo.repos.tokenInfo.rate.replace(',', '');\n\n    const [refresh, setRefresh] = useState(true);\n    let [needSearch, setNeedSearch] = useState(true);\n\n    const onRefresh = async () => {\n        storeTransInfo.meta = Meta.initial;\n\n        setRefresh(true);\n        await storeTransInfo.fetch(address, searchToken);\n        setRefresh(false);\n\n        storeTrans.meta = Meta.initial;\n\n        setRefresh(true);\n        await storeTrans.loadMore(address, searchToken, needSearch, setNeedSearch);\n        setRefresh(false);\n    };\n\n    return (\n        <>\n            {storeTransInfo.meta === 'loading' && storeTrans.meta === 'loading' && !refresh && (\n                <Spin className=\"loading\" size=\"large\" />\n            )}\n            <TransInfoContext.Provider value={storeTransInfo}>\n                {(storeTransInfo.meta === 'success' || storeTransInfo.meta === 'loading') && (\n                    <>\n                        <FillInNavBar />\n                        {/*<TokenInfo />*/}\n                    </>\n                )}\n                <TransContext.Provider value={storeTrans}>\n                    <PullToRefresh\n                        refreshingContent={<Spin size=\"large\" className=\"spinning\" />}\n                        onRefresh={onRefresh}\n                        canFetchMore={false}\n                        className=\"pullToRefresh\"\n                        pullDownThreshold={65}\n                        maxPullDownDistance={65}\n                    >\n                        <>\n                            <div\n                                className=\"trans-block\"\n                                style={{\n                                    background: 'white',\n                                    borderRadius: '5rem 5rem 0 0',\n                                    minHeight: 'calc(100vh - 11rem)',\n                                }}\n                            >\n                                <TokenInfo />\n                                <Transactions\n                                    rate={rate}\n                                    needSearch={needSearch}\n                                    setNeedSearch={setNeedSearch}\n                                />\n                            </div>\n                        </>\n                    </PullToRefresh>\n                </TransContext.Provider>\n            </TransInfoContext.Provider>\n        </>\n    );\n};\n\nexport default observer(TransactionsPage);\n","import * as React from 'react';\nimport { Button, Result } from 'antd';\nimport { urls } from '@config/apiUrls';\nimport { Link } from 'react-router-dom';\n\nconst NotFoundPage = () => {\n    return (\n        <Result\n            status=\"404\"\n            title=\"404\"\n            subTitle=\"Sorry, the page you visited does not exist.\"\n            extra={\n                <Link to={urls.MAIN}>\n                    <Button type=\"primary\">Back Home</Button>\n                </Link>\n            }\n        />\n    );\n};\n\nexport default NotFoundPage;\n","import { transDetails, transDetailsApi } from '@store/models/transactions/transDetailsApi';\nimport { formatNumber } from '@utils/formatMoney';\n\nexport const CreateTransDetails = (response: transDetailsApi): transDetails => {\n    return {\n        hash: response.hash,\n        timestamp: response.timestamp,\n        blockNumber: formatNumber(response.blockNumber),\n        success: response.success,\n        from: response.from,\n        to: response.to,\n        gasLimit: formatNumber(response.gasLimit),\n        gasUsed: formatNumber(response.gasUsed),\n        gasProc: `(${((response.gasUsed * 100) / response.gasLimit).toFixed(2)}%)`,\n        confirmations: formatNumber(response.confirmations),\n    };\n};\n","import { ApiResp } from '@utils/ApiResp';\nimport axios from 'axios';\nimport { apikey, apiUrl, getTransDetails } from '@config/apiUrls';\nimport { log } from '@utils/log';\nimport { CreateTransDetails } from '@utils/createTransDetails';\n\nexport const requestTransDetails = async (transHash: string): Promise<ApiResp> => {\n    try {\n        const response = await axios({\n            method: 'get',\n            url: `${apiUrl}${getTransDetails}${transHash}${apikey}`,\n        });\n        return {\n            isError: false,\n            data: CreateTransDetails(response.data),\n        };\n    } catch (e) {\n        log(e);\n        return {\n            isError: true,\n            data: null,\n        };\n    }\n};\n","import { Meta } from '@utils/meta';\nimport { action, computed, get, makeObservable, observable, runInAction } from 'mobx';\nimport { requestTransDetails } from '@store/TransDetailsStore/requestTransDetails';\nimport { transDetails, transDetailsApi } from '@store/models/transactions/transDetailsApi';\n\nconst defaultDetails: transDetails = {\n    hash: '',\n    timestamp: 0,\n    blockNumber: '0',\n    success: false,\n    from: '',\n    to: '',\n    gasLimit: '0',\n    gasUsed: '0',\n    gasProc: '(0%)',\n    confirmations: '',\n};\n\nexport default class TransDetailsStore {\n    _details: transDetails = defaultDetails;\n    meta: Meta = Meta.initial;\n\n    constructor() {\n        makeObservable(this, {\n            _details: observable,\n            meta: observable,\n            fetch: action.bound,\n            details: computed,\n        });\n    }\n\n    async fetch(transHash: string): Promise<void> {\n        if (this.meta === Meta.loading || this.meta === Meta.success) {\n            return;\n        }\n\n        this.meta = Meta.loading;\n        this._details = defaultDetails;\n\n        const { isError, data } = await requestTransDetails(transHash);\n        if (isError) {\n            this.meta = Meta.error;\n            return;\n        }\n        runInAction(() => {\n            this.meta = Meta.success;\n            this._details = data;\n        });\n    }\n\n    get details(): transDetails {\n        return this._details;\n    }\n}\n","import * as React from 'react';\nimport { useContext } from 'react';\nimport { Card, Typography } from 'antd';\nimport { replaceAll } from '@utils/replaceALl';\nimport { formatMoney } from '@utils/formatMoney';\nimport { TransDetailsContext } from '../TransDetailsPage';\nimport DataToCopy from '@components/DataToCopy';\nimport './TransCard.scss';\n\nconst { Title } = Typography;\n\ntype Props = {\n    params: {\n        hash: string;\n        coins: string;\n        rate: string;\n        symbol: string;\n    };\n};\n\nconst TransCard: React.FC<Props> = ({ params }) => {\n    const store = useContext(TransDetailsContext);\n\n    const date = new Date(store.details.timestamp * 1000);\n    const hours = date.getHours();\n    const minutes = date.getMinutes();\n    const hoursForm = hours < 10 ? '0' + String(hours).slice(-2) : hours;\n    const minutesForm = minutes < 10 ? '0' + String(minutes).slice(-2) : minutes;\n    const balanceReplace = replaceAll(params.coins, ',', '');\n    const usdBalance = formatMoney((Number(params.rate) * Number(balanceReplace)).toFixed(2), 2);\n\n    return (\n        <div className=\"trans-details-page\">\n            <div className=\"monitor-info\">\n                <Title level={2} style={{ color: 'white' }}>\n                    {' '}\n                    Transaction Details\n                </Title>\n            </div>\n            <Card\n                title=\"Transaction Hash\"\n                size=\"small\"\n                bordered={true}\n                style={{\n                    width: '100%',\n                    borderRadius: '5rem 5rem 0 0',\n                    wordBreak: 'break-all',\n                    paddingTop: '2rem',\n                }}\n            >\n                {store.details.hash}\n                <DataToCopy text={store.details.hash} />\n            </Card>\n\n            <Card title=\"Status\" size=\"small\" style={{ width: '100%', borderRadius: '0' }}>\n                {store.details.success && 'Success'}\n                {!store.details.success && 'Failed'}\n            </Card>\n            <Card title=\"Block\" size=\"small\" style={{ width: '100%', borderRadius: '0' }}>\n                {store.details.blockNumber} ({store.details.confirmations} Block Confirmations)\n            </Card>\n            <Card title=\"Timestamp\" size=\"small\" style={{ width: '100%', borderRadius: '0' }}>\n                {date.toDateString()} at {hoursForm}:{minutesForm}\n            </Card>\n            <Card\n                title=\"From\"\n                size=\"small\"\n                style={{ width: '100%', borderRadius: '0', wordBreak: 'break-word' }}\n            >\n                {store.details.from}\n                <DataToCopy text={store.details.from} />\n            </Card>\n            <Card\n                title=\"To\"\n                size=\"small\"\n                style={{ width: '100%', borderRadius: '0', wordBreak: 'break-word' }}\n            >\n                {store.details.to}\n                <DataToCopy text={store.details.to} />\n            </Card>\n            <Card title=\"Value USD\" size=\"small\" style={{ width: '100%', borderRadius: '0' }}>\n                ${usdBalance}\n            </Card>\n            <Card title=\"Value\" size=\"small\" style={{ width: '100%', borderRadius: '0' }}>\n                {params.coins} {params.symbol}\n            </Card>\n            <Card title=\"Gas Limit\" size=\"small\" style={{ width: '100%', borderRadius: '0' }}>\n                {store.details.gasLimit}\n            </Card>\n            <Card\n                title=\"Gas Used by Transaction\"\n                size=\"small\"\n                style={{ width: '100%', borderRadius: '0' }}\n            >\n                {store.details.gasUsed} {store.details.gasProc}\n            </Card>\n        </div>\n    );\n};\n\nexport default TransCard;\n","import * as React from 'react';\nimport { observer } from 'mobx-react-lite';\nimport NavBar from '@components/NavBar';\nimport './TransDetailsPage.scss';\nimport { Spin } from 'antd';\nimport { createContext } from 'react';\nimport TransDetailsStore from '@store/TransDetailsStore';\nimport { useParams } from 'react-router-dom';\nimport { useLocalStore } from '@utils/useLocal';\nimport { useAsync } from '@utils/useAsync';\nimport { getParamsTransDetails } from '@utils/getPatamsTransDetails';\nimport TransCard from './TransCard';\n\n// @ts-ignore\nexport const TransDetailsContext = createContext<TransDetailsStore>();\n\nconst TransDetailsPage = () => {\n    const store = useLocalStore(() => new TransDetailsStore());\n    // @ts-ignore\n    const { transHash } = useParams();\n    const params = getParamsTransDetails(transHash);\n    useAsync(store.fetch, [params.hash], []);\n\n    return (\n        <>\n            <NavBar title={''} subtitle={''} />\n            {(store.meta === 'loading' || store.meta === 'initial') && (\n                <Spin className=\"loading\" size=\"large\" tip=\"Loading...\" />\n            )}\n            <TransDetailsContext.Provider value={store}>\n                {store.meta === 'success' && <TransCard params={params} />}\n            </TransDetailsContext.Provider>\n        </>\n    );\n};\n\nexport default observer(TransDetailsPage);\n","export const getParamsTransDetails = (url: string) => {\n    const urlArr = url.split('&');\n    return {\n        hash: urlArr[0],\n        coins: urlArr[1].slice(urlArr[1].indexOf('=') + 1),\n        rate: urlArr[2].slice(urlArr[2].indexOf('=') + 1),\n        symbol: urlArr[3].slice(urlArr[3].indexOf('=') + 1),\n    };\n};\n","import * as React from 'react';\nimport TokensPage from './pages/TokensPage';\nimport './App.scss';\nimport WelcomePage from './pages/WelcomePage';\nimport TransactionsPage from './pages/TransactionsPage';\nimport { BrowserRouter, Route, Switch } from 'react-router-dom';\nimport { urls } from '@config/apiUrls';\nimport NotFoundPage from './pages/NotFoundPage';\nimport { Spin } from 'antd';\nimport { LoadingOutlined } from '@ant-design/icons';\n// @ts-ignore\nimport LoaderIcon from 'react-loader-icon';\nimport TransDetailsPage from './pages/TransDetailsPage';\n\n// Spin.setDefaultIndicator(<LoadingOutlined style={{color:'#d3adf7'}}/>)\nSpin.setDefaultIndicator(<LoaderIcon size={50} type={'spokes'} color=\"#d3adf7\" />);\n\nfunction App() {\n    return (\n        <>\n            <div className=\"app\">\n                <BrowserRouter>\n                    <Switch>\n                        <Route component={WelcomePage} exact path={urls.MAIN} />\n                        <Route component={TokensPage} path={urls.TOKENS.mask} />\n                        <Route component={TransactionsPage} path={urls.TRANS.mask} />\n                        <Route component={TransDetailsPage} path={urls.TRANS_DETAILS.mask} />\n                        <Route component={NotFoundPage} />\n                    </Switch>\n                </BrowserRouter>\n            </div>\n        </>\n    );\n}\n\nexport default App;\n","const MOBILE_WIDTH = 720;\nconst MOBILE_HEIGHT = 1280;\n\nconst SIZE = {\n    MOBILE: [MOBILE_WIDTH, MOBILE_HEIGHT],\n};\n\nexport function fit() {\n    let currentWidth = window.innerWidth;\n    let currentHeight = window.innerHeight;\n\n    const initScale = 10;\n    let currentScale = 1;\n\n    const [aspectWidth, aspectHeight] = SIZE.MOBILE;\n    if (currentWidth < aspectWidth) {\n        currentScale = currentWidth / aspectWidth;\n    }\n    if (currentHeight < aspectHeight) {\n        currentScale = Math.min(currentScale, currentHeight / aspectHeight);\n    }\n\n    currentScale = Math.max(currentScale, 0.5);\n\n    document.documentElement.style.fontSize = `${currentScale * initScale}px`;\n}\n","import * as React from 'react';\nimport ReactDOM from 'react-dom';\nimport { ConfigProvider } from 'antd';\nimport 'antd/dist/antd.css';\nimport App from './App';\nimport '@styles/index.scss';\nimport { fit } from '@utils/fit';\n\nReactDOM.render(\n    <React.StrictMode>\n        <ConfigProvider>\n            <App />\n        </ConfigProvider>\n    </React.StrictMode>,\n    document.getElementById('root'),\n);\n\ndocument.addEventListener('DOMContentLoaded', () => {\n    initScale();\n});\n\nfunction initScale() {\n    window.addEventListener('resize', fit);\n    fit();\n}\n"],"sourceRoot":""}